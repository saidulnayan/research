{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Maternal Health Risk Data (Decision Tree)","provenance":[{"file_id":"1y3coDIbfIL731D8guz0AbkDOHwHPBUNJ","timestamp":1654707819406},{"file_id":"1oxnhMTlomJ4HVhPuowpPFyMt1mwuOuQo","timestamp":1654522599080}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"TPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"LnPbntVRnfvV"},"source":["Importing the Dependencies"]},{"cell_type":"code","metadata":{"id":"-71UtHzNVWjB","executionInfo":{"status":"ok","timestamp":1654920254738,"user_tz":-360,"elapsed":1283,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["import numpy as np\n","import pandas as pd\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","import seaborn as sns\n","from sklearn import metrics\n","from sklearn.model_selection import StratifiedKFold, GridSearchCV, RandomizedSearchCV, cross_val_score\n","from sklearn.metrics import confusion_matrix,classification_report\n","from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score,log_loss\n","import matplotlib.pyplot as plt"],"execution_count":1,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","upload = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"id":"C47Gw1SoPQbT","executionInfo":{"status":"ok","timestamp":1654920271709,"user_tz":-360,"elapsed":10148,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"f3bed8c7-2298-490b-cdd3-fee20e5c5839"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-af066aab-11c3-4f54-a0ff-dce14409c80b\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-af066aab-11c3-4f54-a0ff-dce14409c80b\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Maternal Health Risk Data Set.csv to Maternal Health Risk Data Set.csv\n"]}]},{"cell_type":"markdown","metadata":{"id":"bmfOfG8joBBy"},"source":["Data Collection and Analysis"]},{"cell_type":"code","metadata":{"id":"Xpw6Mj_pn_TL","executionInfo":{"status":"ok","timestamp":1654920275336,"user_tz":-360,"elapsed":1964,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# loading the dataset to a pandas DataFrame\n","dataset = pd.read_csv('Maternal Health Risk Data Set.csv') "],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-tjO09ncovoh","executionInfo":{"status":"ok","timestamp":1654920276734,"user_tz":-360,"elapsed":7,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"b060b128-be5b-4135-9eec-9d6751ad6de4"},"source":["# printing the first 5 rows of the dataset\n","dataset.head()"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age  SystolicBP  DiastolicBP    BS  BodyTemp  HeartRate  RiskLevel\n","0   25         130           80  15.0      98.0         86  high risk\n","1   35         140           90  13.0      98.0         70  high risk\n","2   29          90           70   8.0     100.0         80  high risk\n","3   30         140           85   7.0      98.0         70  high risk\n","4   35         120           60   6.1      98.0         76   low risk"],"text/html":["\n","  <div id=\"df-9d415f39-051a-4ec5-a3b6-882564ebb7e9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","      <th>RiskLevel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>130</td>\n","      <td>80</td>\n","      <td>15.0</td>\n","      <td>98.0</td>\n","      <td>86</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>35</td>\n","      <td>140</td>\n","      <td>90</td>\n","      <td>13.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>8.0</td>\n","      <td>100.0</td>\n","      <td>80</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30</td>\n","      <td>140</td>\n","      <td>85</td>\n","      <td>7.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35</td>\n","      <td>120</td>\n","      <td>60</td>\n","      <td>6.1</td>\n","      <td>98.0</td>\n","      <td>76</td>\n","      <td>low risk</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d415f39-051a-4ec5-a3b6-882564ebb7e9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9d415f39-051a-4ec5-a3b6-882564ebb7e9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9d415f39-051a-4ec5-a3b6-882564ebb7e9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#check Missing values\n","dataset.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ylu3Ii79TGdv","executionInfo":{"status":"ok","timestamp":1654708098821,"user_tz":-360,"elapsed":13,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"1d63c9b2-e18d-4898-ea7c-c37b708d4b83"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Age            0\n","SystolicBP     0\n","DiastolicBP    0\n","BS             0\n","BodyTemp       0\n","HeartRate      0\n","RiskLevel      0\n","dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lynParo6pEMB","executionInfo":{"status":"ok","timestamp":1654708100878,"user_tz":-360,"elapsed":9,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"ae6383e1-ccde-4aa2-b89c-15c8ea5fd61e"},"source":["# number of rows and Columns in this dataset\n","dataset.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1014, 7)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"3NDJOlrEpmoL","executionInfo":{"status":"ok","timestamp":1654708101830,"user_tz":-360,"elapsed":16,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"eee8797d-98c9-433a-ef3d-8c64f1ff5ce0"},"source":["# getting the statistical measures of the data\n","dataset.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Age   SystolicBP  DiastolicBP           BS     BodyTemp  \\\n","count  1014.000000  1014.000000  1014.000000  1014.000000  1014.000000   \n","mean     29.871795   113.198225    76.460552     8.725986    98.665089   \n","std      13.474386    18.403913    13.885796     3.293532     1.371384   \n","min      10.000000    70.000000    49.000000     6.000000    98.000000   \n","25%      19.000000   100.000000    65.000000     6.900000    98.000000   \n","50%      26.000000   120.000000    80.000000     7.500000    98.000000   \n","75%      39.000000   120.000000    90.000000     8.000000    98.000000   \n","max      70.000000   160.000000   100.000000    19.000000   103.000000   \n","\n","         HeartRate  \n","count  1014.000000  \n","mean     74.301775  \n","std       8.088702  \n","min       7.000000  \n","25%      70.000000  \n","50%      76.000000  \n","75%      80.000000  \n","max      90.000000  "],"text/html":["\n","  <div id=\"df-e5e2d2d1-7a6e-450a-b75c-fa32f87317e9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>29.871795</td>\n","      <td>113.198225</td>\n","      <td>76.460552</td>\n","      <td>8.725986</td>\n","      <td>98.665089</td>\n","      <td>74.301775</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>13.474386</td>\n","      <td>18.403913</td>\n","      <td>13.885796</td>\n","      <td>3.293532</td>\n","      <td>1.371384</td>\n","      <td>8.088702</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>10.000000</td>\n","      <td>70.000000</td>\n","      <td>49.000000</td>\n","      <td>6.000000</td>\n","      <td>98.000000</td>\n","      <td>7.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>19.000000</td>\n","      <td>100.000000</td>\n","      <td>65.000000</td>\n","      <td>6.900000</td>\n","      <td>98.000000</td>\n","      <td>70.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>26.000000</td>\n","      <td>120.000000</td>\n","      <td>80.000000</td>\n","      <td>7.500000</td>\n","      <td>98.000000</td>\n","      <td>76.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>39.000000</td>\n","      <td>120.000000</td>\n","      <td>90.000000</td>\n","      <td>8.000000</td>\n","      <td>98.000000</td>\n","      <td>80.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>70.000000</td>\n","      <td>160.000000</td>\n","      <td>100.000000</td>\n","      <td>19.000000</td>\n","      <td>103.000000</td>\n","      <td>90.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5e2d2d1-7a6e-450a-b75c-fa32f87317e9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e5e2d2d1-7a6e-450a-b75c-fa32f87317e9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e5e2d2d1-7a6e-450a-b75c-fa32f87317e9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LrpHzaGpp5dQ","executionInfo":{"status":"ok","timestamp":1654708103717,"user_tz":-360,"elapsed":11,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"e7d87c86-d4b9-4269-877a-d181e3f61d79"},"source":["dataset['RiskLevel'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["low risk     406\n","mid risk     336\n","high risk    272\n","Name: RiskLevel, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"I6MWR0k_qSCK","executionInfo":{"status":"ok","timestamp":1654708105518,"user_tz":-360,"elapsed":17,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"3aa9a746-6011-4885-891d-a83a7f3acb94"},"source":["dataset.groupby('RiskLevel').mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Age  SystolicBP  DiastolicBP         BS   BodyTemp  HeartRate\n","RiskLevel                                                                     \n","high risk  36.216912  124.194853    85.073529  12.122610  98.899265  76.742647\n","low risk   26.869458  105.866995    72.534483   7.220271  98.368966  72.770936\n","mid risk   28.363095  113.154762    74.232143   7.795744  98.833333  74.175595"],"text/html":["\n","  <div id=\"df-a6c1e2e1-e001-4043-ba8d-1f39511eae74\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","    </tr>\n","    <tr>\n","      <th>RiskLevel</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>high risk</th>\n","      <td>36.216912</td>\n","      <td>124.194853</td>\n","      <td>85.073529</td>\n","      <td>12.122610</td>\n","      <td>98.899265</td>\n","      <td>76.742647</td>\n","    </tr>\n","    <tr>\n","      <th>low risk</th>\n","      <td>26.869458</td>\n","      <td>105.866995</td>\n","      <td>72.534483</td>\n","      <td>7.220271</td>\n","      <td>98.368966</td>\n","      <td>72.770936</td>\n","    </tr>\n","    <tr>\n","      <th>mid risk</th>\n","      <td>28.363095</td>\n","      <td>113.154762</td>\n","      <td>74.232143</td>\n","      <td>7.795744</td>\n","      <td>98.833333</td>\n","      <td>74.175595</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6c1e2e1-e001-4043-ba8d-1f39511eae74')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a6c1e2e1-e001-4043-ba8d-1f39511eae74 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a6c1e2e1-e001-4043-ba8d-1f39511eae74');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["correlation = dataset.corr()"],"metadata":{"id":"k6H3x1B8Yrzd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# constructing a heatmap to nderstand the correlation\n","plt.figure(figsize=(10,10))\n","sns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":595},"id":"SRci1RLuYvFW","executionInfo":{"status":"ok","timestamp":1654708110112,"user_tz":-360,"elapsed":833,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"6fee72e5-5469-4b58-de5f-fe26e847a129"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f8dbfc60650>"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["\n","from sklearn.preprocessing import LabelEncoder\n","label_encoder = LabelEncoder()\n","dataset['RiskLevel']= label_encoder.fit_transform(dataset['RiskLevel'])"],"metadata":{"id":"a6I_WTWw5JEA","executionInfo":{"status":"ok","timestamp":1654920283087,"user_tz":-360,"elapsed":330,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"fpskM0wz5TQ7","executionInfo":{"status":"ok","timestamp":1654709015534,"user_tz":-360,"elapsed":433,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"d086f219-d113-4cb3-e5e5-ec4c93ac1fc5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age  SystolicBP  DiastolicBP    BS  BodyTemp  HeartRate  RiskLevel\n","0   25         130           80  15.0      98.0         86          0\n","1   35         140           90  13.0      98.0         70          0\n","2   29          90           70   8.0     100.0         80          0\n","3   30         140           85   7.0      98.0         70          0\n","4   35         120           60   6.1      98.0         76          1"],"text/html":["\n","  <div id=\"df-2fc8b16e-1f3e-4170-8554-55700e8717ab\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","      <th>RiskLevel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>130</td>\n","      <td>80</td>\n","      <td>15.0</td>\n","      <td>98.0</td>\n","      <td>86</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>35</td>\n","      <td>140</td>\n","      <td>90</td>\n","      <td>13.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>8.0</td>\n","      <td>100.0</td>\n","      <td>80</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30</td>\n","      <td>140</td>\n","      <td>85</td>\n","      <td>7.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35</td>\n","      <td>120</td>\n","      <td>60</td>\n","      <td>6.1</td>\n","      <td>98.0</td>\n","      <td>76</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fc8b16e-1f3e-4170-8554-55700e8717ab')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2fc8b16e-1f3e-4170-8554-55700e8717ab button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2fc8b16e-1f3e-4170-8554-55700e8717ab');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["\n","*   0 -> High Risk\n","*   1 -> Low Risk\n","*   2 -> Mid risk "],"metadata":{"id":"cFy40GI-6BKb"}},{"cell_type":"code","source":["dataset.RiskLevel.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XkV8GuAq5k-v","executionInfo":{"status":"ok","timestamp":1654709018666,"user_tz":-360,"elapsed":383,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"04b95c88-8f73-458f-d934-52a82c773792"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"RoDW7l9mqqHZ","executionInfo":{"status":"ok","timestamp":1654920287619,"user_tz":-360,"elapsed":368,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# separating the data and labels\n","X = dataset.drop(columns = 'RiskLevel', axis=1)\n","Y = dataset['RiskLevel']"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3eiRW9M9raMm","executionInfo":{"status":"ok","timestamp":1654709023893,"user_tz":-360,"elapsed":738,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"81d6099b-74f2-4535-98a1-833ff8fb659d"},"source":["print(X)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["      Age  SystolicBP  DiastolicBP    BS  BodyTemp  HeartRate\n","0      25         130           80  15.0      98.0         86\n","1      35         140           90  13.0      98.0         70\n","2      29          90           70   8.0     100.0         80\n","3      30         140           85   7.0      98.0         70\n","4      35         120           60   6.1      98.0         76\n","...   ...         ...          ...   ...       ...        ...\n","1009   22         120           60  15.0      98.0         80\n","1010   55         120           90  18.0      98.0         60\n","1011   35          85           60  19.0      98.0         86\n","1012   43         120           90  18.0      98.0         70\n","1013   32         120           65   6.0     101.0         76\n","\n","[1014 rows x 6 columns]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AoxgTJAMrcCl","executionInfo":{"status":"ok","timestamp":1654708121754,"user_tz":-360,"elapsed":9,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"bc607cef-f09c-4ef1-bf9e-7fb3eb0a848b"},"source":["print(Y)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0       0\n","1       0\n","2       0\n","3       0\n","4       1\n","       ..\n","1009    0\n","1010    0\n","1011    0\n","1012    0\n","1013    2\n","Name: RiskLevel, Length: 1014, dtype: int64\n"]}]},{"cell_type":"markdown","metadata":{"id":"umAbo_kqrlzI"},"source":["Data Standardization"]},{"cell_type":"code","metadata":{"id":"njfM5X60rgnc","executionInfo":{"status":"ok","timestamp":1654920292705,"user_tz":-360,"elapsed":357,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["scaler = StandardScaler()"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g0ai5ARbr53p","executionInfo":{"status":"ok","timestamp":1654920295058,"user_tz":-360,"elapsed":342,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"7c951af9-57f1-48b9-a2df-cb8af6b7ce13"},"source":["scaler.fit(X)"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["StandardScaler()"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"FHxNwPuZr-kD","executionInfo":{"status":"ok","timestamp":1654920296693,"user_tz":-360,"elapsed":2,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["standardized_data = scaler.transform(X)"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fjMwZ5x6sPUJ","executionInfo":{"status":"ok","timestamp":1654709032201,"user_tz":-360,"elapsed":5,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"2c5d6cde-1ee5-4b30-955f-31cac948b4b5"},"source":["print(standardized_data)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.36173812  0.91339632  0.25502279  1.90589019 -0.4852155   1.44695615]\n"," [ 0.38077697  1.45702716  0.97553854  1.29833966 -0.4852155  -0.53208757]\n"," [-0.06473208 -1.26112705 -0.46549297 -0.22053665  0.97388449  0.70481475]\n"," ...\n"," [ 0.38077697 -1.53294248 -1.18600873  3.12099124 -0.4852155   1.44695615]\n"," [ 0.97478904  0.36976548  0.97553854  2.81721597 -0.4852155  -0.53208757]\n"," [ 0.15802244  0.36976548 -0.82575085 -0.82808717  1.70343448  0.21005383]]\n"]}]},{"cell_type":"code","metadata":{"id":"ZxWSl4SGsRjE","executionInfo":{"status":"ok","timestamp":1654920299460,"user_tz":-360,"elapsed":333,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["X = standardized_data\n","Y = dataset['RiskLevel']"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lhJF_7QjsjmP","executionInfo":{"status":"ok","timestamp":1654708131944,"user_tz":-360,"elapsed":12,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"92ba9003-c5e2-4682-d416-aebe0777dc2e"},"source":["print(X)\n","print(Y)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.36173812  0.91339632  0.25502279  1.90589019 -0.4852155   1.44695615]\n"," [ 0.38077697  1.45702716  0.97553854  1.29833966 -0.4852155  -0.53208757]\n"," [-0.06473208 -1.26112705 -0.46549297 -0.22053665  0.97388449  0.70481475]\n"," ...\n"," [ 0.38077697 -1.53294248 -1.18600873  3.12099124 -0.4852155   1.44695615]\n"," [ 0.97478904  0.36976548  0.97553854  2.81721597 -0.4852155  -0.53208757]\n"," [ 0.15802244  0.36976548 -0.82575085 -0.82808717  1.70343448  0.21005383]]\n","0       0\n","1       0\n","2       0\n","3       0\n","4       1\n","       ..\n","1009    0\n","1010    0\n","1011    0\n","1012    0\n","1013    2\n","Name: RiskLevel, Length: 1014, dtype: int64\n"]}]},{"cell_type":"markdown","metadata":{"id":"gHciEFkxsoQP"},"source":["Train Test Split"]},{"cell_type":"code","metadata":{"id":"AEfKGj_yslvD","executionInfo":{"status":"ok","timestamp":1654920302951,"user_tz":-360,"elapsed":4,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DR05T-o0t3FQ","executionInfo":{"status":"ok","timestamp":1654920304456,"user_tz":-360,"elapsed":5,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"fae2eb7e-11fb-45c6-d42c-e73bfe26616e"},"source":["print(X.shape, X_train.shape, X_test.shape)"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["(1014, 6) (811, 6) (203, 6)\n"]}]},{"cell_type":"code","source":["Y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZRHrj7gHAJuY","executionInfo":{"status":"ok","timestamp":1654708139342,"user_tz":-360,"elapsed":5,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"2c259584-8ed0-4d38-8ae3-80494519fb15"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["270     1\n","388     1\n","305     1\n","468     0\n","816     2\n","       ..\n","359     2\n","1004    0\n","912     1\n","397     0\n","697     1\n","Name: RiskLevel, Length: 203, dtype: int64"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"ElJ3tkOtuC_n"},"source":["Training the Model"]},{"cell_type":"code","source":["params = [{'max_depth': list(range(10, 15)), 'max_features': list(range(0,10))}]"],"metadata":{"id":"c6x2pKrd62gg","executionInfo":{"status":"ok","timestamp":1654920422914,"user_tz":-360,"elapsed":393,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["classifier = DecisionTreeClassifier()"],"metadata":{"id":"j5bvt6J57Ipo","executionInfo":{"status":"ok","timestamp":1654920424429,"user_tz":-360,"elapsed":4,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["dst = GridSearchCV(classifier, params, cv = 3, scoring='accuracy')"],"metadata":{"id":"1gAqz7-t6_6X","executionInfo":{"status":"ok","timestamp":1654920425955,"user_tz":-360,"elapsed":5,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"id":"5szLWHlNt9xc","executionInfo":{"status":"ok","timestamp":1654920428432,"user_tz":-360,"elapsed":335,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# classifier = DecisionTreeClassifier(max_depth=10)"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"ncJWY_7suPAb","executionInfo":{"status":"ok","timestamp":1654920430636,"user_tz":-360,"elapsed":502,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"ac9ea717-3292-405f-ae07-caabcfefad55"},"source":["#training the support vector Machine Classifier\n","model = dst.fit(X_train, Y_train)"],"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_validation.py:372: FitFailedWarning: \n","60 fits failed out of a total of 150.\n","The score on these train-test partitions for these parameters will be set to nan.\n","If these failures are not expected, you can try to debug them by setting error_score='raise'.\n","\n","Below are more details about the failures:\n","--------------------------------------------------------------------------------\n","60 fits failed with the following error:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_validation.py\", line 680, in _fit_and_score\n","    estimator.fit(X_train, y_train, **fit_params)\n","  File \"/usr/local/lib/python3.7/dist-packages/sklearn/tree/_classes.py\", line 942, in fit\n","    X_idx_sorted=X_idx_sorted,\n","  File \"/usr/local/lib/python3.7/dist-packages/sklearn/tree/_classes.py\", line 308, in fit\n","    raise ValueError(\"max_features must be in (0, n_features]\")\n","ValueError: max_features must be in (0, n_features]\n","\n","  warnings.warn(some_fits_failed_message, FitFailedWarning)\n","/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_search.py:972: UserWarning: One or more of the test scores are non-finite: [       nan 0.72497836 0.72498292 0.73490046 0.74471322 0.77186461\n"," 0.77801922        nan        nan        nan        nan 0.73858139\n"," 0.74849437 0.76079905 0.75705435 0.76076716 0.77802378        nan\n","        nan        nan        nan 0.74722336 0.74101863 0.76694\n"," 0.76937269 0.78915311 0.78789121        nan        nan        nan\n","        nan 0.7644982  0.76570088 0.78665664 0.76321352 0.79161769\n"," 0.78295294        nan        nan        nan        nan 0.76693545\n"," 0.78913034 0.78667942 0.77680288 0.78174571 0.79037401        nan\n","        nan        nan]\n","  category=UserWarning,\n"]}]},{"cell_type":"markdown","metadata":{"id":"UV4-CAfquiyP"},"source":["Model Evaluation"]},{"cell_type":"code","source":["# summarize result\n","print('Best Score: %s' % model.best_score_)\n","print('Best Hyperparameters: %s' % model.best_params_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IQOvwAiC7Y81","executionInfo":{"status":"ok","timestamp":1654920436357,"user_tz":-360,"elapsed":375,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"954f4f9f-a30e-4100-c6ef-7bb55f5828bf"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Score: 0.7916176939547173\n","Best Hyperparameters: {'max_depth': 13, 'max_features': 5}\n"]}]},{"cell_type":"markdown","metadata":{"id":"yhAjGPJWunXa"},"source":["Accuracy Score"]},{"cell_type":"code","metadata":{"id":"fJLEPQK7ueXp","executionInfo":{"status":"ok","timestamp":1654920462784,"user_tz":-360,"elapsed":354,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# accuracy score on the training data\n","X_train_prediction = model.predict(X_train)\n","training_data_accuracy = accuracy_score(X_train_prediction, Y_train)"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mmJ22qhVvNwj","executionInfo":{"status":"ok","timestamp":1654920464993,"user_tz":-360,"elapsed":4,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"ec9c16e4-7243-48cf-83d2-f19b0b1fa2f0"},"source":["print('Accuracy score of the training data : ', training_data_accuracy)"],"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the training data :  0.9025893958076449\n"]}]},{"cell_type":"code","metadata":{"id":"G2CICFMEvcCl","executionInfo":{"status":"ok","timestamp":1654920492245,"user_tz":-360,"elapsed":351,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# accuracy score on the test data\n","X_test_prediction = model.predict(X_test)\n","test_data_accuracy = accuracy_score(X_test_prediction, Y_test)"],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i2GcW_t_vz7C","executionInfo":{"status":"ok","timestamp":1654920503842,"user_tz":-360,"elapsed":329,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"e516d8d0-a108-4b7a-c996-669735b1d7f8"},"source":["print('Accuracy score of the test data : ', test_data_accuracy)"],"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the test data :  0.8078817733990148\n"]}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)\n","y_pred_proba = model.predict_proba(X_test)"],"metadata":{"id":"vhzXo6SkcWpP","executionInfo":{"status":"ok","timestamp":1654920507932,"user_tz":-360,"elapsed":326,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NSCYWeEqBdQJ","executionInfo":{"status":"ok","timestamp":1654920509895,"user_tz":-360,"elapsed":330,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"ff45f384-d5a5-4f48-e73e-1b9c022ddfdd"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 2, 0, 2, 2, 0, 1, 0, 2, 0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 2, 1,\n","       1, 1, 2, 0, 2, 1, 0, 0, 1, 2, 1, 0, 1, 1, 1, 1, 2, 1, 2, 2, 0, 1,\n","       0, 1, 2, 0, 0, 0, 2, 2, 1, 2, 1, 0, 1, 1, 2, 2, 2, 1, 0, 1, 0, 1,\n","       2, 2, 1, 2, 1, 2, 2, 0, 1, 2, 1, 2, 1, 0, 2, 1, 2, 0, 1, 2, 2, 1,\n","       2, 0, 1, 2, 0, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 1, 0, 0, 2, 2, 1, 1,\n","       0, 0, 1, 0, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 0, 0, 0, 1, 1, 2, 2, 1,\n","       1, 2, 2, 2, 2, 0, 2, 1, 2, 0, 1, 2, 1, 2, 0, 1, 0, 0, 0, 1, 2, 0,\n","       1, 0, 1, 2, 0, 2, 0, 2, 2, 2, 0, 2, 1, 2, 2, 2, 1, 0, 1, 2, 0, 0,\n","       0, 2, 2, 1, 2, 1, 0, 2, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,\n","       2, 2, 1, 0, 2])"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["y_pred_proba"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8dfi1wgVD1x9","executionInfo":{"status":"ok","timestamp":1654920511217,"user_tz":-360,"elapsed":7,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"3950b463-aa29-4dbb-81e7-1ff2071913ca"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.        , 1.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.66666667, 0.33333333],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.5       , 0.22222222, 0.27777778],\n","       [0.42857143, 0.28571429, 0.28571429],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [0.        , 1.        , 0.        ],\n","       [0.07692308, 0.84615385, 0.07692308],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [0.07692308, 0.84615385, 0.07692308],\n","       [1.        , 0.        , 0.        ],\n","       [0.5       , 0.        , 0.5       ],\n","       [0.        , 1.        , 0.        ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [0.        , 0.5       , 0.5       ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.5       , 0.5       ],\n","       [0.        , 0.5       , 0.5       ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.42857143, 0.28571429, 0.28571429],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.5       , 0.22222222, 0.27777778],\n","       [0.5       , 0.22222222, 0.27777778],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.4       , 0.6       ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [0.        , 1.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.33333333, 0.66666667],\n","       [0.        , 0.33333333, 0.66666667],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [0.        , 1.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.5       , 0.5       ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.75      , 0.25      ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.4       , 0.6       ],\n","       [0.        , 1.        , 0.        ],\n","       [0.4       , 0.        , 0.6       ],\n","       [0.        , 0.4       , 0.6       ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [0.        , 1.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.5       , 0.5       ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.5       , 0.5       ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [0.        , 0.5       , 0.5       ],\n","       [0.        , 1.        , 0.        ],\n","       [0.07692308, 0.84615385, 0.07692308],\n","       [0.        , 1.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.5       , 0.22222222, 0.27777778],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.07692308, 0.84615385, 0.07692308],\n","       [1.        , 0.        , 0.        ],\n","       [0.4       , 0.        , 0.6       ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [0.        , 0.5       , 0.5       ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.33333333, 0.66666667],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.5       , 0.5       ],\n","       [0.        , 0.        , 1.        ],\n","       [0.4       , 0.        , 0.6       ],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.4       , 0.        , 0.6       ],\n","       [0.        , 1.        , 0.        ],\n","       [0.33333333, 0.        , 0.66666667],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.4       , 0.6       ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.42857143, 0.28571429, 0.28571429],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.42857143, 0.28571429, 0.28571429],\n","       [0.        , 0.2       , 0.8       ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.4       , 0.6       ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.07692308, 0.84615385, 0.07692308],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.5       , 0.22222222, 0.27777778],\n","       [0.        , 0.2       , 0.8       ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.2       , 0.8       ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.1875    , 0.8125    ],\n","       [0.        , 0.        , 1.        ],\n","       [0.03225806, 0.38709677, 0.58064516],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.5       , 0.22222222, 0.27777778],\n","       [0.        , 0.1875    , 0.8125    ]])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# Constructing the confusion matrix.\n","from sklearn.metrics import confusion_matrix\n","confusion_matrix(Y_test, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CgnKCFcF91EW","executionInfo":{"status":"ok","timestamp":1654920514905,"user_tz":-360,"elapsed":338,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"0f26d661-8db3-41f9-9ea7-61ce61b76b01"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[50,  0,  5],\n","       [ 3, 58, 20],\n","       [ 4,  7, 56]])"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["print(\"Precision Score : \",precision_score(Y_test, y_pred, average='micro'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NqGqhdlVcyVE","executionInfo":{"status":"ok","timestamp":1654920520238,"user_tz":-360,"elapsed":338,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"d495cd4d-a160-421e-9ee1-9d697a28a3ec"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Precision Score :  0.8078817733990148\n"]}]},{"cell_type":"code","source":["print(\"Recall Score : \",recall_score(Y_test, y_pred, average='micro'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4jrpix-ycSUW","executionInfo":{"status":"ok","timestamp":1654920523035,"user_tz":-360,"elapsed":5,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"c0bc9704-6b0a-4c8f-fce9-e83b9c725576"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Recall Score :  0.8078817733990148\n"]}]},{"cell_type":"code","source":["print(\"Accuracy Score : \",accuracy_score(Y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LNIZ-MVfbgH9","executionInfo":{"status":"ok","timestamp":1654920527071,"user_tz":-360,"elapsed":1307,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"045ff443-d845-44a9-df60-1e6f26a2affb"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score :  0.8078817733990148\n"]}]},{"cell_type":"code","source":["print(\"F1 Score : \",f1_score(Y_test, y_pred, average='micro'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ntGmozN8d_o7","executionInfo":{"status":"ok","timestamp":1654920528593,"user_tz":-360,"elapsed":5,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"b891111d-dbce-4c0d-cdb0-fd019f26310b"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["F1 Score :  0.8078817733990148\n"]}]},{"cell_type":"code","source":["print(\"Log Loss : \",log_loss(Y_test, y_pred_proba))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pym6h3XOeHUD","executionInfo":{"status":"ok","timestamp":1654920530682,"user_tz":-360,"elapsed":3,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"462197aa-eb6c-4203-a583-f83c60cefd30"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Log Loss :  1.945551700719684\n"]}]},{"cell_type":"markdown","metadata":{"id":"gq8ZX1xpwPF5"},"source":["Making a Predictive System"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U-ULRe4yv5tH","executionInfo":{"status":"ok","timestamp":1654920534231,"user_tz":-360,"elapsed":367,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"46427f18-42fc-4d7d-d96c-9ad21e21250c"},"source":["input_data = (42,130,80,18,98,70)\n","\n","# changing the input_data to numpy array\n","input_data_as_numpy_array = np.asarray(input_data)\n","\n","# reshape the array as we are predicting for one instance\n","input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)\n","\n","# standardize the input data\n","std_data = scaler.transform(input_data_reshaped)\n","print(std_data)\n","\n","prediction = model.predict(std_data)\n","print(prediction)\n","\n","if (prediction[0] == 0):\n","  print('High Risk')\n","elif (prediction[0] == 1):\n","  print('Low Risk')\n","else:\n","  print('Mid Risk')"],"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.90053753  0.91339632  0.25502279  2.81721597 -0.4852155  -0.53208757]]\n","[2]\n","Mid Risk\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names\n","  \"X does not have valid feature names, but\"\n"]}]},{"cell_type":"code","metadata":{"id":"Ex2A_pr4yCpm"},"source":[""],"execution_count":null,"outputs":[]}]}