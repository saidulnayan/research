{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Maternal Health Risk Data (Random Forest)","provenance":[{"file_id":"17DJBnhzGFPSNzosP8T1_WhRl_aV8na8H","timestamp":1654708488221},{"file_id":"1y3coDIbfIL731D8guz0AbkDOHwHPBUNJ","timestamp":1654707819406},{"file_id":"1oxnhMTlomJ4HVhPuowpPFyMt1mwuOuQo","timestamp":1654522599080}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"TPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"LnPbntVRnfvV"},"source":["Importing the Dependencies"]},{"cell_type":"code","metadata":{"id":"-71UtHzNVWjB","executionInfo":{"status":"ok","timestamp":1654917678761,"user_tz":-360,"elapsed":1317,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["import numpy as np\n","import pandas as pd\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier\n","import seaborn as sns\n","from sklearn import metrics\n","from sklearn.model_selection import StratifiedKFold, GridSearchCV, RandomizedSearchCV, cross_val_score\n","from sklearn.metrics import confusion_matrix,classification_report\n","from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score,log_loss\n","import matplotlib.pyplot as plt"],"execution_count":1,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","upload = files.upload()"],"metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":73},"id":"C47Gw1SoPQbT","executionInfo":{"status":"ok","timestamp":1654917691726,"user_tz":-360,"elapsed":10703,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"350cadbe-c4ff-4549-beda-eba7331e0e5c"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-435c0cc3-c622-45a4-8676-089c44bfdfa1\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-435c0cc3-c622-45a4-8676-089c44bfdfa1\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Maternal Health Risk Data Set.csv to Maternal Health Risk Data Set.csv\n"]}]},{"cell_type":"markdown","metadata":{"id":"bmfOfG8joBBy"},"source":["Data Collection and Analysis"]},{"cell_type":"code","metadata":{"id":"Xpw6Mj_pn_TL","executionInfo":{"status":"ok","timestamp":1654917694249,"user_tz":-360,"elapsed":583,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# loading the dataset to a pandas DataFrame\n","dataset = pd.read_csv('Maternal Health Risk Data Set.csv') "],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-tjO09ncovoh","executionInfo":{"status":"ok","timestamp":1654917695494,"user_tz":-360,"elapsed":14,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"994116b8-d821-41c6-ea77-e2f3a812f5e0"},"source":["# printing the first 5 rows of the dataset\n","dataset.head()"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age  SystolicBP  DiastolicBP    BS  BodyTemp  HeartRate  RiskLevel\n","0   25         130           80  15.0      98.0         86  high risk\n","1   35         140           90  13.0      98.0         70  high risk\n","2   29          90           70   8.0     100.0         80  high risk\n","3   30         140           85   7.0      98.0         70  high risk\n","4   35         120           60   6.1      98.0         76   low risk"],"text/html":["\n","  <div id=\"df-e3477fe2-cab0-4287-a0fe-8bf32c4bd82c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","      <th>RiskLevel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>130</td>\n","      <td>80</td>\n","      <td>15.0</td>\n","      <td>98.0</td>\n","      <td>86</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>35</td>\n","      <td>140</td>\n","      <td>90</td>\n","      <td>13.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>8.0</td>\n","      <td>100.0</td>\n","      <td>80</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30</td>\n","      <td>140</td>\n","      <td>85</td>\n","      <td>7.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35</td>\n","      <td>120</td>\n","      <td>60</td>\n","      <td>6.1</td>\n","      <td>98.0</td>\n","      <td>76</td>\n","      <td>low risk</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3477fe2-cab0-4287-a0fe-8bf32c4bd82c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e3477fe2-cab0-4287-a0fe-8bf32c4bd82c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e3477fe2-cab0-4287-a0fe-8bf32c4bd82c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#check Missing values\n","dataset.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ylu3Ii79TGdv","executionInfo":{"status":"ok","timestamp":1654709520087,"user_tz":-360,"elapsed":10,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"d7c8c783-7979-4001-c20e-603d6c81d902"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Age            0\n","SystolicBP     0\n","DiastolicBP    0\n","BS             0\n","BodyTemp       0\n","HeartRate      0\n","RiskLevel      0\n","dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lynParo6pEMB","executionInfo":{"status":"ok","timestamp":1654709521625,"user_tz":-360,"elapsed":6,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"2267917e-9f74-4e9e-b408-a114ecbce43d"},"source":["# number of rows and Columns in this dataset\n","dataset.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1014, 7)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"3NDJOlrEpmoL","executionInfo":{"status":"ok","timestamp":1654709522894,"user_tz":-360,"elapsed":629,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"a4f8be8e-2a55-404a-b61f-5af40cae741b"},"source":["# getting the statistical measures of the data\n","dataset.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Age   SystolicBP  DiastolicBP           BS     BodyTemp  \\\n","count  1014.000000  1014.000000  1014.000000  1014.000000  1014.000000   \n","mean     29.871795   113.198225    76.460552     8.725986    98.665089   \n","std      13.474386    18.403913    13.885796     3.293532     1.371384   \n","min      10.000000    70.000000    49.000000     6.000000    98.000000   \n","25%      19.000000   100.000000    65.000000     6.900000    98.000000   \n","50%      26.000000   120.000000    80.000000     7.500000    98.000000   \n","75%      39.000000   120.000000    90.000000     8.000000    98.000000   \n","max      70.000000   160.000000   100.000000    19.000000   103.000000   \n","\n","         HeartRate  \n","count  1014.000000  \n","mean     74.301775  \n","std       8.088702  \n","min       7.000000  \n","25%      70.000000  \n","50%      76.000000  \n","75%      80.000000  \n","max      90.000000  "],"text/html":["\n","  <div id=\"df-1903e3fb-76cf-4398-a827-74b165c1113b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>29.871795</td>\n","      <td>113.198225</td>\n","      <td>76.460552</td>\n","      <td>8.725986</td>\n","      <td>98.665089</td>\n","      <td>74.301775</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>13.474386</td>\n","      <td>18.403913</td>\n","      <td>13.885796</td>\n","      <td>3.293532</td>\n","      <td>1.371384</td>\n","      <td>8.088702</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>10.000000</td>\n","      <td>70.000000</td>\n","      <td>49.000000</td>\n","      <td>6.000000</td>\n","      <td>98.000000</td>\n","      <td>7.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>19.000000</td>\n","      <td>100.000000</td>\n","      <td>65.000000</td>\n","      <td>6.900000</td>\n","      <td>98.000000</td>\n","      <td>70.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>26.000000</td>\n","      <td>120.000000</td>\n","      <td>80.000000</td>\n","      <td>7.500000</td>\n","      <td>98.000000</td>\n","      <td>76.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>39.000000</td>\n","      <td>120.000000</td>\n","      <td>90.000000</td>\n","      <td>8.000000</td>\n","      <td>98.000000</td>\n","      <td>80.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>70.000000</td>\n","      <td>160.000000</td>\n","      <td>100.000000</td>\n","      <td>19.000000</td>\n","      <td>103.000000</td>\n","      <td>90.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1903e3fb-76cf-4398-a827-74b165c1113b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1903e3fb-76cf-4398-a827-74b165c1113b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1903e3fb-76cf-4398-a827-74b165c1113b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LrpHzaGpp5dQ","executionInfo":{"status":"ok","timestamp":1654709524735,"user_tz":-360,"elapsed":15,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"f1ac798a-9806-4cd6-9141-769a1f268180"},"source":["dataset['RiskLevel'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["low risk     406\n","mid risk     336\n","high risk    272\n","Name: RiskLevel, dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"I6MWR0k_qSCK","executionInfo":{"status":"ok","timestamp":1654709526398,"user_tz":-360,"elapsed":6,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"b76127a3-73e8-4e8a-ecf2-a400af9e98b3"},"source":["dataset.groupby('RiskLevel').mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Age  SystolicBP  DiastolicBP         BS   BodyTemp  HeartRate\n","RiskLevel                                                                     \n","high risk  36.216912  124.194853    85.073529  12.122610  98.899265  76.742647\n","low risk   26.869458  105.866995    72.534483   7.220271  98.368966  72.770936\n","mid risk   28.363095  113.154762    74.232143   7.795744  98.833333  74.175595"],"text/html":["\n","  <div id=\"df-61628624-7df1-481f-b8a3-3c9c49803343\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","    </tr>\n","    <tr>\n","      <th>RiskLevel</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>high risk</th>\n","      <td>36.216912</td>\n","      <td>124.194853</td>\n","      <td>85.073529</td>\n","      <td>12.122610</td>\n","      <td>98.899265</td>\n","      <td>76.742647</td>\n","    </tr>\n","    <tr>\n","      <th>low risk</th>\n","      <td>26.869458</td>\n","      <td>105.866995</td>\n","      <td>72.534483</td>\n","      <td>7.220271</td>\n","      <td>98.368966</td>\n","      <td>72.770936</td>\n","    </tr>\n","    <tr>\n","      <th>mid risk</th>\n","      <td>28.363095</td>\n","      <td>113.154762</td>\n","      <td>74.232143</td>\n","      <td>7.795744</td>\n","      <td>98.833333</td>\n","      <td>74.175595</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61628624-7df1-481f-b8a3-3c9c49803343')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-61628624-7df1-481f-b8a3-3c9c49803343 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-61628624-7df1-481f-b8a3-3c9c49803343');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["correlation = dataset.corr()"],"metadata":{"id":"k6H3x1B8Yrzd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# constructing a heatmap to nderstand the correlation\n","plt.figure(figsize=(10,10))\n","sns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":595},"id":"SRci1RLuYvFW","executionInfo":{"status":"ok","timestamp":1654709531010,"user_tz":-360,"elapsed":803,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"95aa49f6-a8d7-42ff-f0a6-c795af14d3ec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f63e8d80810>"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["\n","from sklearn.preprocessing import LabelEncoder\n","label_encoder = LabelEncoder()\n","dataset['RiskLevel']= label_encoder.fit_transform(dataset['RiskLevel'])"],"metadata":{"id":"a6I_WTWw5JEA","executionInfo":{"status":"ok","timestamp":1654917705234,"user_tz":-360,"elapsed":362,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"fpskM0wz5TQ7","executionInfo":{"status":"ok","timestamp":1654917706955,"user_tz":-360,"elapsed":7,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"3e1d19ae-0124-4c49-c96b-93ca46f6f590"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age  SystolicBP  DiastolicBP    BS  BodyTemp  HeartRate  RiskLevel\n","0   25         130           80  15.0      98.0         86          0\n","1   35         140           90  13.0      98.0         70          0\n","2   29          90           70   8.0     100.0         80          0\n","3   30         140           85   7.0      98.0         70          0\n","4   35         120           60   6.1      98.0         76          1"],"text/html":["\n","  <div id=\"df-8625ae18-8f12-4faa-90ec-b042549635bc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","      <th>RiskLevel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>130</td>\n","      <td>80</td>\n","      <td>15.0</td>\n","      <td>98.0</td>\n","      <td>86</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>35</td>\n","      <td>140</td>\n","      <td>90</td>\n","      <td>13.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>8.0</td>\n","      <td>100.0</td>\n","      <td>80</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30</td>\n","      <td>140</td>\n","      <td>85</td>\n","      <td>7.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35</td>\n","      <td>120</td>\n","      <td>60</td>\n","      <td>6.1</td>\n","      <td>98.0</td>\n","      <td>76</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8625ae18-8f12-4faa-90ec-b042549635bc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8625ae18-8f12-4faa-90ec-b042549635bc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8625ae18-8f12-4faa-90ec-b042549635bc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["\n","*   0 -> High Risk\n","*   1 -> Low Risk\n","*   2 -> Mid risk "],"metadata":{"id":"cFy40GI-6BKb"}},{"cell_type":"code","source":["dataset.RiskLevel.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XkV8GuAq5k-v","executionInfo":{"status":"ok","timestamp":1654709537273,"user_tz":-360,"elapsed":637,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"4a4a6f2a-6ce3-41f6-f671-848cd6f3ed65"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2])"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"RoDW7l9mqqHZ","executionInfo":{"status":"ok","timestamp":1654917711167,"user_tz":-360,"elapsed":370,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# separating the data and labels\n","X = dataset.drop(columns = 'RiskLevel', axis=1)\n","Y = dataset['RiskLevel']"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3eiRW9M9raMm","executionInfo":{"status":"ok","timestamp":1654709539699,"user_tz":-360,"elapsed":11,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"1a0e6248-7878-42cc-a0b8-9c67ae95a261"},"source":["print(X)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["      Age  SystolicBP  DiastolicBP    BS  BodyTemp  HeartRate\n","0      25         130           80  15.0      98.0         86\n","1      35         140           90  13.0      98.0         70\n","2      29          90           70   8.0     100.0         80\n","3      30         140           85   7.0      98.0         70\n","4      35         120           60   6.1      98.0         76\n","...   ...         ...          ...   ...       ...        ...\n","1009   22         120           60  15.0      98.0         80\n","1010   55         120           90  18.0      98.0         60\n","1011   35          85           60  19.0      98.0         86\n","1012   43         120           90  18.0      98.0         70\n","1013   32         120           65   6.0     101.0         76\n","\n","[1014 rows x 6 columns]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AoxgTJAMrcCl","executionInfo":{"status":"ok","timestamp":1654709541375,"user_tz":-360,"elapsed":4,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"90fbbea0-476c-4400-9d39-aaf2c7c5eb70"},"source":["print(Y)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0       0\n","1       0\n","2       0\n","3       0\n","4       1\n","       ..\n","1009    0\n","1010    0\n","1011    0\n","1012    0\n","1013    2\n","Name: RiskLevel, Length: 1014, dtype: int64\n"]}]},{"cell_type":"markdown","metadata":{"id":"umAbo_kqrlzI"},"source":["Data Standardization"]},{"cell_type":"code","metadata":{"id":"njfM5X60rgnc","executionInfo":{"status":"ok","timestamp":1654917716384,"user_tz":-360,"elapsed":345,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["scaler = StandardScaler()"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g0ai5ARbr53p","executionInfo":{"status":"ok","timestamp":1654917717804,"user_tz":-360,"elapsed":8,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"efa6a125-eb1f-4e19-8f09-20ae2ef3da73"},"source":["scaler.fit(X)"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["StandardScaler()"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"FHxNwPuZr-kD","executionInfo":{"status":"ok","timestamp":1654917720164,"user_tz":-360,"elapsed":613,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["standardized_data = scaler.transform(X)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fjMwZ5x6sPUJ","executionInfo":{"status":"ok","timestamp":1654709548359,"user_tz":-360,"elapsed":440,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"1d7e4187-24b3-484a-bd79-37abdc9482f1"},"source":["print(standardized_data)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.36173812  0.91339632  0.25502279  1.90589019 -0.4852155   1.44695615]\n"," [ 0.38077697  1.45702716  0.97553854  1.29833966 -0.4852155  -0.53208757]\n"," [-0.06473208 -1.26112705 -0.46549297 -0.22053665  0.97388449  0.70481475]\n"," ...\n"," [ 0.38077697 -1.53294248 -1.18600873  3.12099124 -0.4852155   1.44695615]\n"," [ 0.97478904  0.36976548  0.97553854  2.81721597 -0.4852155  -0.53208757]\n"," [ 0.15802244  0.36976548 -0.82575085 -0.82808717  1.70343448  0.21005383]]\n"]}]},{"cell_type":"code","metadata":{"id":"ZxWSl4SGsRjE","executionInfo":{"status":"ok","timestamp":1654917723033,"user_tz":-360,"elapsed":396,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["X = standardized_data\n","Y = dataset['RiskLevel']"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lhJF_7QjsjmP","executionInfo":{"status":"ok","timestamp":1654917724829,"user_tz":-360,"elapsed":8,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"0ec6fc61-458d-40fb-8cd2-9245e49dbfe7"},"source":["print(X)\n","print(Y)"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.36173812  0.91339632  0.25502279  1.90589019 -0.4852155   1.44695615]\n"," [ 0.38077697  1.45702716  0.97553854  1.29833966 -0.4852155  -0.53208757]\n"," [-0.06473208 -1.26112705 -0.46549297 -0.22053665  0.97388449  0.70481475]\n"," ...\n"," [ 0.38077697 -1.53294248 -1.18600873  3.12099124 -0.4852155   1.44695615]\n"," [ 0.97478904  0.36976548  0.97553854  2.81721597 -0.4852155  -0.53208757]\n"," [ 0.15802244  0.36976548 -0.82575085 -0.82808717  1.70343448  0.21005383]]\n","0       0\n","1       0\n","2       0\n","3       0\n","4       1\n","       ..\n","1009    0\n","1010    0\n","1011    0\n","1012    0\n","1013    2\n","Name: RiskLevel, Length: 1014, dtype: int64\n"]}]},{"cell_type":"markdown","metadata":{"id":"gHciEFkxsoQP"},"source":["Train Test Split"]},{"cell_type":"code","metadata":{"id":"AEfKGj_yslvD","executionInfo":{"status":"ok","timestamp":1654920662878,"user_tz":-360,"elapsed":324,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DR05T-o0t3FQ","executionInfo":{"status":"ok","timestamp":1654917729452,"user_tz":-360,"elapsed":9,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"c57d2032-5e1c-4c4f-d493-483ecaae9994"},"source":["print(X.shape, X_train.shape, X_test.shape)"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["(1014, 6) (811, 6) (203, 6)\n"]}]},{"cell_type":"code","source":["Y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZRHrj7gHAJuY","executionInfo":{"status":"ok","timestamp":1654709555913,"user_tz":-360,"elapsed":11,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"2ac4c390-dcbd-4d16-e7e1-6e44d4f96283"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["270     1\n","388     1\n","305     1\n","468     0\n","816     2\n","       ..\n","359     2\n","1004    0\n","912     1\n","397     0\n","697     1\n","Name: RiskLevel, Length: 203, dtype: int64"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","metadata":{"id":"ElJ3tkOtuC_n"},"source":["Training the Model"]},{"cell_type":"code","source":["# Create the parameter grid based on the results of random search \n","param_grid = {\n","    'bootstrap': [True],\n","    'max_depth': [10, 11, 12, 13, 14, 15],\n","    'max_features': [1, 2, 3, 4, 5, 6, 7, 8],\n","    'min_samples_leaf': [3, 4, 5, 6],\n","    'min_samples_split': [4, 6, 8, 10],\n","    'n_estimators': [50, 100, 150, 200]\n","}"],"metadata":{"id":"dODpt5KlwMNK","executionInfo":{"status":"ok","timestamp":1654918999370,"user_tz":-360,"elapsed":357,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"5szLWHlNt9xc","executionInfo":{"status":"ok","timestamp":1654920746284,"user_tz":-360,"elapsed":1391,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["rf = RandomForestClassifier(max_depth=14)"],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"id":"ncJWY_7suPAb","executionInfo":{"status":"ok","timestamp":1654919072603,"user_tz":-360,"elapsed":354,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# Instantiate the grid search model\n","grid_search = GridSearchCV(estimator = rf, param_grid = param_grid, \n","                          cv = 3, n_jobs = -1, verbose = 2, scoring='accuracy')"],"execution_count":22,"outputs":[]},{"cell_type":"code","source":["model = rf.fit(X_train, Y_train)\n","model"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V0zh-8pTxZ5h","executionInfo":{"status":"ok","timestamp":1654920781666,"user_tz":-360,"elapsed":586,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"a3eadea5-423c-4618-ed28-862f8aefa427"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(max_depth=14)"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","metadata":{"id":"UV4-CAfquiyP"},"source":["Model Evaluation"]},{"cell_type":"code","source":["###\n","def visualize_classifier(model, X, y, ax=None, cmap='rainbow'):\n","    ax = ax or plt.gca()\n","    \n","    # Plot the training points\n","    ax.scatter(X[:, 0], X[:, 1], c=y, s=30, cmap=cmap,\n","               clim=(y.min(), y.max()), zorder=3)\n","    ax.axis('tight')\n","    ax.axis('off')\n","    xlim = ax.get_xlim()\n","    ylim = ax.get_ylim()\n","    \n","    # fit the estimator\n","    model.fit(X, y)\n","    xx, yy = np.meshgrid(np.linspace(*xlim, num=200),\n","                         np.linspace(*ylim, num=200))\n","    Z = model.predict(np.c_[xx.ravel(), yy.ravel()]).reshape(xx.shape)\n","\n","    # Create a color plot with the results\n","    n_classes = len(np.unique(y))\n","    contours = ax.contourf(xx, yy, Z, alpha=0.3,\n","                           levels=np.arange(n_classes + 1) - 0.5,\n","                           cmap=cmap, clim=(y.min(), y.max()),\n","                           zorder=1)\n","\n","    ax.set(xlim=xlim, ylim=ylim)"],"metadata":{"id":"7IwrlRY2XmKt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# summarize result\n","print('Best Score: %s' % model.best_score_)\n","print('Best Hyperparameters: %s' % model.best_params_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rB3Owl3Sxw-R","executionInfo":{"status":"ok","timestamp":1654920559508,"user_tz":-360,"elapsed":5,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"3ed1df38-2cc4-407b-9f28-b00e56905016"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Score: 0.7755910892442257\n","Best Hyperparameters: {'bootstrap': True, 'max_depth': 14, 'max_features': 6, 'min_samples_leaf': 3, 'min_samples_split': 6, 'n_estimators': 100}\n"]}]},{"cell_type":"markdown","metadata":{"id":"yhAjGPJWunXa"},"source":["Accuracy Score"]},{"cell_type":"code","metadata":{"id":"fJLEPQK7ueXp","executionInfo":{"status":"ok","timestamp":1654920796802,"user_tz":-360,"elapsed":343,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# accuracy score on the training data\n","X_train_prediction = model.predict(X_train)\n","training_data_accuracy = accuracy_score(X_train_prediction, Y_train)"],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mmJ22qhVvNwj","executionInfo":{"status":"ok","timestamp":1654920799672,"user_tz":-360,"elapsed":368,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"0d9f43cb-2a6b-4062-cacf-c7b0439d8cb7"},"source":["print('Accuracy score of the training data : ', training_data_accuracy)"],"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the training data :  0.9210850801479655\n"]}]},{"cell_type":"code","metadata":{"id":"G2CICFMEvcCl","executionInfo":{"status":"ok","timestamp":1654920803819,"user_tz":-360,"elapsed":574,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"source":["# accuracy score on the test data\n","X_test_prediction = model.predict(X_test)\n","test_data_accuracy = accuracy_score(X_test_prediction, Y_test)"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i2GcW_t_vz7C","executionInfo":{"status":"ok","timestamp":1654920807460,"user_tz":-360,"elapsed":352,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"50119656-8ec3-438f-c569-13342ac6f094"},"source":["print('Accuracy score of the test data : ', test_data_accuracy)"],"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the test data :  0.8522167487684729\n"]}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)\n","y_pred_proba = model.predict_proba(X_test)"],"metadata":{"id":"vhzXo6SkcWpP","executionInfo":{"status":"ok","timestamp":1654920811200,"user_tz":-360,"elapsed":573,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NSCYWeEqBdQJ","executionInfo":{"status":"ok","timestamp":1654710059023,"user_tz":-360,"elapsed":21,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"16128bf0-a8a2-484f-842b-bd86a8bb6ff2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 0, 2, 2, 0, 1, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 1, 1,\n","       2, 1, 2, 0, 0, 1, 0, 0, 2, 1, 2, 0, 1, 1, 2, 1, 2, 1, 2, 2, 0, 1,\n","       1, 1, 2, 0, 0, 0, 2, 2, 1, 2, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1,\n","       1, 2, 1, 2, 1, 2, 2, 0, 1, 1, 1, 2, 1, 0, 2, 1, 2, 0, 1, 1, 2, 1,\n","       2, 0, 1, 2, 0, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 1, 0, 0, 0, 2, 1, 1,\n","       0, 0, 2, 0, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 1, 1, 2, 2, 1,\n","       1, 2, 2, 2, 2, 0, 2, 1, 2, 0, 1, 2, 1, 2, 0, 1, 1, 0, 0, 1, 2, 0,\n","       1, 0, 1, 2, 0, 2, 1, 2, 2, 2, 0, 2, 1, 2, 1, 2, 1, 0, 1, 2, 0, 0,\n","       0, 2, 2, 1, 2, 1, 0, 2, 0, 2, 2, 2, 0, 0, 0, 2, 1, 2, 2, 2, 2, 2,\n","       1, 2, 1, 0, 2])"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["y_pred_proba"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8dfi1wgVD1x9","executionInfo":{"status":"ok","timestamp":1654710060918,"user_tz":-360,"elapsed":11,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"5b86149f-4cc5-4033-c3bf-394f7cbaaccd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.094     , 0.78932419, 0.11667581],\n","       [0.03      , 0.758     , 0.212     ],\n","       [0.02      , 0.7922619 , 0.1877381 ],\n","       [1.        , 0.        , 0.        ],\n","       [0.27      , 0.045     , 0.685     ],\n","       [0.        , 0.24958333, 0.75041667],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.68290476, 0.31709524],\n","       [0.99818182, 0.        , 0.00181818],\n","       [0.        , 0.        , 1.        ],\n","       [0.62      , 0.06      , 0.32      ],\n","       [0.99      , 0.01      , 0.        ],\n","       [0.46123016, 0.4       , 0.13876984],\n","       [0.93066667, 0.00833333, 0.061     ],\n","       [0.15      , 0.07      , 0.78      ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.        , 1.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.48951289, 0.22323087, 0.28725624],\n","       [0.00833333, 0.09166667, 0.9       ],\n","       [0.01      , 0.81035714, 0.17964286],\n","       [0.        , 1.        , 0.        ],\n","       [0.01      , 0.47928571, 0.51071429],\n","       [0.        , 1.        , 0.        ],\n","       [0.15      , 0.07      , 0.78      ],\n","       [0.91852597, 0.01083333, 0.07064069],\n","       [0.59      , 0.29666667, 0.11333333],\n","       [0.01      , 0.89      , 0.1       ],\n","       [0.9       , 0.        , 0.1       ],\n","       [0.50832923, 0.        , 0.49167077],\n","       [0.        , 0.48816667, 0.51183333],\n","       [0.        , 0.75966667, 0.24033333],\n","       [0.        , 0.4143869 , 0.5856131 ],\n","       [0.93066667, 0.00833333, 0.061     ],\n","       [0.        , 0.665     , 0.335     ],\n","       [0.15483333, 0.66311905, 0.18204762],\n","       [0.02      , 0.24      , 0.74      ],\n","       [0.        , 0.99333333, 0.00666667],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 0.77      , 0.23      ],\n","       [0.24      , 0.12      , 0.64      ],\n","       [0.        , 0.26      , 0.74      ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.95      , 0.05      ],\n","       [0.42343651, 0.50233473, 0.07422876],\n","       [0.02      , 0.945     , 0.035     ],\n","       [0.01      , 0.122     , 0.868     ],\n","       [0.48951289, 0.22323087, 0.28725624],\n","       [0.48951289, 0.22323087, 0.28725624],\n","       [0.95288889, 0.01      , 0.03711111],\n","       [0.        , 0.41928667, 0.58071333],\n","       [0.17      , 0.12      , 0.71      ],\n","       [0.        , 0.98      , 0.02      ],\n","       [0.        , 0.15472013, 0.84527987],\n","       [0.02      , 0.75003023, 0.22996977],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.02      , 0.6       , 0.38      ],\n","       [0.        , 0.32997619, 0.67002381],\n","       [0.06      , 0.37880952, 0.56119048],\n","       [0.03      , 0.532     , 0.438     ],\n","       [0.02      , 0.98      , 0.        ],\n","       [0.99      , 0.        , 0.01      ],\n","       [0.        , 0.52527778, 0.47472222],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.77886905, 0.22113095],\n","       [0.00333333, 0.5315    , 0.46516667],\n","       [0.        , 0.        , 1.        ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.41928667, 0.58071333],\n","       [0.13      , 0.67866667, 0.19133333],\n","       [0.39794841, 0.        , 0.60205159],\n","       [0.        , 0.41928667, 0.58071333],\n","       [0.99      , 0.        , 0.01      ],\n","       [0.        , 0.84361111, 0.15638889],\n","       [0.02866667, 0.57133333, 0.4       ],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.1       , 0.9       ],\n","       [0.01      , 0.8845    , 0.1055    ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.06      , 0.94      ],\n","       [0.01      , 0.81      , 0.18      ],\n","       [0.        , 0.03      , 0.97      ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.99      , 0.01      ],\n","       [0.        , 0.75966667, 0.24033333],\n","       [0.15      , 0.07      , 0.78      ],\n","       [0.        , 0.53266667, 0.46733333],\n","       [0.        , 0.125     , 0.875     ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.55321429, 0.44678571],\n","       [0.        , 0.38045238, 0.61954762],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.9715    , 0.0285    ],\n","       [0.        , 0.52527778, 0.47472222],\n","       [0.01      , 0.        , 0.99      ],\n","       [0.06381731, 0.74      , 0.19618269],\n","       [1.        , 0.        , 0.        ],\n","       [0.01      , 0.81      , 0.18      ],\n","       [0.        , 0.15472013, 0.84527987],\n","       [0.        , 0.63      , 0.37      ],\n","       [0.        , 0.99      , 0.01      ],\n","       [0.01      , 0.88      , 0.11      ],\n","       [0.        , 0.53266667, 0.46733333],\n","       [0.88      , 0.0325    , 0.0875    ],\n","       [0.48951289, 0.22323087, 0.28725624],\n","       [0.46123016, 0.4       , 0.13876984],\n","       [0.01666667, 0.17333333, 0.81      ],\n","       [0.        , 0.84      , 0.16      ],\n","       [0.        , 0.99333333, 0.00666667],\n","       [0.64      , 0.1       , 0.26      ],\n","       [0.42      , 0.29769048, 0.28230952],\n","       [0.03      , 0.21516807, 0.75483193],\n","       [0.42      , 0.29769048, 0.28230952],\n","       [0.39794841, 0.        , 0.60205159],\n","       [0.40357143, 0.        , 0.59642857],\n","       [0.        , 1.        , 0.        ],\n","       [0.05      , 0.905     , 0.045     ],\n","       [0.        , 0.522     , 0.478     ],\n","       [0.        , 0.15472013, 0.84527987],\n","       [0.        , 0.55321429, 0.44678571],\n","       [0.        , 1.        , 0.        ],\n","       [0.        , 0.8945    , 0.1055    ],\n","       [0.03571429, 0.02      , 0.94428571],\n","       [1.        , 0.        , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.91852597, 0.01083333, 0.07064069],\n","       [0.        , 0.84      , 0.16      ],\n","       [0.04333333, 0.61309826, 0.3435684 ],\n","       [0.01      , 0.12      , 0.87      ],\n","       [0.        , 0.39459524, 0.60540476],\n","       [0.        , 0.95      , 0.05      ],\n","       [0.        , 0.75533333, 0.24466667],\n","       [0.075     , 0.215     , 0.71      ],\n","       [0.39794841, 0.        , 0.60205159],\n","       [0.        , 0.15472013, 0.84527987],\n","       [0.01666667, 0.17333333, 0.81      ],\n","       [1.        , 0.        , 0.        ],\n","       [0.39794841, 0.        , 0.60205159],\n","       [0.02      , 0.6       , 0.38      ],\n","       [0.37345743, 0.        , 0.62654257],\n","       [0.78578947, 0.05263158, 0.16157895],\n","       [0.        , 0.925     , 0.075     ],\n","       [0.        , 0.15472013, 0.84527987],\n","       [0.        , 0.97      , 0.03      ],\n","       [0.        , 0.41928667, 0.58071333],\n","       [0.9194095 , 0.00466063, 0.07592986],\n","       [0.11      , 0.75233333, 0.13766667],\n","       [0.17023392, 0.5017288 , 0.32803728],\n","       [0.82083333, 0.        , 0.17916667],\n","       [1.        , 0.        , 0.        ],\n","       [0.01      , 0.86933333, 0.12066667],\n","       [0.01      , 0.122     , 0.868     ],\n","       [0.99      , 0.01      , 0.        ],\n","       [0.        , 0.98      , 0.02      ],\n","       [1.        , 0.        , 0.        ],\n","       [0.015     , 0.885     , 0.1       ],\n","       [0.02      , 0.03074074, 0.94925926],\n","       [0.86      , 0.07528571, 0.06471429],\n","       [0.08581731, 0.37      , 0.54418269],\n","       [0.42343651, 0.50233473, 0.07422876],\n","       [0.        , 0.16525   , 0.83475   ],\n","       [0.06078947, 0.21763158, 0.72157895],\n","       [0.        , 0.15472013, 0.84527987],\n","       [1.        , 0.        , 0.        ],\n","       [0.05      , 0.        , 0.95      ],\n","       [0.        , 0.9945    , 0.0055    ],\n","       [0.        , 0.45954762, 0.54045238],\n","       [0.        , 0.522     , 0.478     ],\n","       [0.01      , 0.        , 0.99      ],\n","       [0.        , 0.9825    , 0.0175    ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.91166667, 0.08833333],\n","       [0.        , 0.        , 1.        ],\n","       [0.92411111, 0.03222222, 0.04366667],\n","       [0.99      , 0.        , 0.01      ],\n","       [0.69      , 0.01      , 0.3       ],\n","       [0.        , 0.41928667, 0.58071333],\n","       [0.01666667, 0.17333333, 0.81      ],\n","       [0.06      , 0.94      , 0.        ],\n","       [0.02      , 0.        , 0.98      ],\n","       [0.        , 0.73444444, 0.26555556],\n","       [1.        , 0.        , 0.        ],\n","       [0.05      , 0.3       , 0.65      ],\n","       [0.48951289, 0.22323087, 0.28725624],\n","       [0.02      , 0.20325   , 0.77675   ],\n","       [0.01      , 0.04      , 0.95      ],\n","       [0.15      , 0.        , 0.85      ],\n","       [0.98      , 0.        , 0.02      ],\n","       [0.99      , 0.01      , 0.        ],\n","       [1.        , 0.        , 0.        ],\n","       [0.        , 0.16525   , 0.83475   ],\n","       [0.        , 0.7263254 , 0.2736746 ],\n","       [0.05      , 0.        , 0.95      ],\n","       [0.        , 0.1       , 0.9       ],\n","       [0.03      , 0.        , 0.97      ],\n","       [0.        , 0.15472013, 0.84527987],\n","       [0.        , 0.        , 1.        ],\n","       [0.00333333, 0.5315    , 0.46516667],\n","       [0.40357143, 0.        , 0.59642857],\n","       [0.13      , 0.67866667, 0.19133333],\n","       [0.48951289, 0.22323087, 0.28725624],\n","       [0.        , 0.15472013, 0.84527987]])"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["# Constructing the confusion matrix.\n","from sklearn.metrics import confusion_matrix\n","confusion_matrix(Y_test, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CgnKCFcF91EW","executionInfo":{"status":"ok","timestamp":1654920819082,"user_tz":-360,"elapsed":351,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"0b5cafa3-c9d2-4981-e3c5-f8908321fbba"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[49,  0,  6],\n","       [ 3, 67, 11],\n","       [ 1,  9, 57]])"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["print(\"Precision Score : \",precision_score(Y_test, y_pred, average='micro'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NqGqhdlVcyVE","executionInfo":{"status":"ok","timestamp":1654920822068,"user_tz":-360,"elapsed":357,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"199033f4-d535-4896-872d-d0855ecebf24"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Precision Score :  0.8522167487684729\n"]}]},{"cell_type":"code","source":["print(\"Recall Score : \",recall_score(Y_test, y_pred, average='micro'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4jrpix-ycSUW","executionInfo":{"status":"ok","timestamp":1654920823701,"user_tz":-360,"elapsed":3,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"782b5382-adb7-46a1-9185-213a0fc1ff17"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Recall Score :  0.8522167487684729\n"]}]},{"cell_type":"code","source":["print(\"Accuracy Score : \",accuracy_score(Y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LNIZ-MVfbgH9","executionInfo":{"status":"ok","timestamp":1654920825795,"user_tz":-360,"elapsed":354,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"f3f5cd66-4294-4fd2-836e-5910c8c22382"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score :  0.8522167487684729\n"]}]},{"cell_type":"code","source":["print(\"F1 Score : \",f1_score(Y_test, y_pred, average='micro'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ntGmozN8d_o7","executionInfo":{"status":"ok","timestamp":1654920832139,"user_tz":-360,"elapsed":363,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"3003ca38-0361-47b9-aef8-1b9c9ffaf40c"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["F1 Score :  0.852216748768473\n"]}]},{"cell_type":"code","source":["print(\"Log Loss : \",log_loss(Y_test, y_pred_proba))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pym6h3XOeHUD","executionInfo":{"status":"ok","timestamp":1654920834124,"user_tz":-360,"elapsed":5,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"284ce795-392a-4819-e334-b7071e6a7698"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["Log Loss :  0.4108219753170589\n"]}]},{"cell_type":"code","source":["from sklearn.datasets import make_blobs\n","\n","X, y = make_blobs(n_samples=300, centers=4,\n","                  random_state=0, cluster_std=1.0)\n","plt.scatter(X[:, 0], X[:, 1], c=y, s=50, cmap='rainbow');\n","visualize_classifier(model, X, y);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"IUYwz5IWYiWB","executionInfo":{"status":"ok","timestamp":1654710098578,"user_tz":-360,"elapsed":984,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"08dfe319-7398-4311-bfd7-445e9d4ed285"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:23: UserWarning: The following kwargs were not used by contour: 'clim'\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"gq8ZX1xpwPF5"},"source":["Making a Predictive System"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U-ULRe4yv5tH","executionInfo":{"status":"ok","timestamp":1654710143748,"user_tz":-360,"elapsed":549,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"aecd37a2-3f50-4b11-c610-1695ddb9a8e3"},"source":["input_data = (42,130,80,18,98,70)\n","\n","# changing the input_data to numpy array\n","input_data_as_numpy_array = np.asarray(input_data)\n","\n","# reshape the array as we are predicting for one instance\n","input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)\n","\n","# standardize the input data\n","std_data = scaler.transform(input_data_reshaped)\n","print(std_data)\n","\n","prediction = model.predict(std_data)\n","print(prediction)\n","\n","if (prediction[0] == 0):\n","  print('High Risk')\n","elif (prediction[0] == 1):\n","  print('Low Risk')\n","else:\n","  print('Mid Risk')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.90053753  0.91339632  0.25502279  2.81721597 -0.4852155  -0.53208757]]\n","[2]\n","Mid Risk\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names\n","  \"X does not have valid feature names, but\"\n"]}]},{"cell_type":"code","metadata":{"id":"Ex2A_pr4yCpm"},"source":[""],"execution_count":null,"outputs":[]}]}