{"cells":[{"cell_type":"markdown","metadata":{"id":"LnPbntVRnfvV"},"source":["Importing the Dependencies"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-71UtHzNVWjB"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import train_test_split\n","from sklearn import svm\n","import seaborn as sns\n","from sklearn import metrics\n","#from sklearn.model_selection import RepeatedStratifiedKFold\n","from sklearn.model_selection import StratifiedKFold, GridSearchCV, RandomizedSearchCV, cross_val_score\n","from sklearn.metrics import confusion_matrix,classification_report\n","from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score,log_loss\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73,"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","headers":[["content-type","application/javascript"]],"ok":true,"status":200,"status_text":""}}},"executionInfo":{"elapsed":9965,"status":"ok","timestamp":1654884992685,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"C47Gw1SoPQbT","outputId":"5dfee655-4f2c-4f35-b5b0-f21e134728bf"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-73a4d1d3-9157-4bec-82e7-a5da8312fbb9\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-73a4d1d3-9157-4bec-82e7-a5da8312fbb9\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Maternal Health Risk Data Set.csv to Maternal Health Risk Data Set.csv\n"]}],"source":["from google.colab import files\n","upload = files.upload()"]},{"cell_type":"markdown","metadata":{"id":"bmfOfG8joBBy"},"source":["Data Collection and Analysis"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Xpw6Mj_pn_TL"},"outputs":[],"source":["# loading the dataset to a pandas DataFrame\n","dataset = pd.read_csv('Maternal Health Risk Data Set.csv') "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1654858148095,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"-tjO09ncovoh","outputId":"863d2b2c-cbab-4668-e11f-a1e3ae810f09"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-64873299-acb8-46dc-acbc-8ee59b17addc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","      <th>RiskLevel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>130</td>\n","      <td>80</td>\n","      <td>15.0</td>\n","      <td>98.0</td>\n","      <td>86</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>35</td>\n","      <td>140</td>\n","      <td>90</td>\n","      <td>13.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>8.0</td>\n","      <td>100.0</td>\n","      <td>80</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30</td>\n","      <td>140</td>\n","      <td>85</td>\n","      <td>7.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>high risk</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35</td>\n","      <td>120</td>\n","      <td>60</td>\n","      <td>6.1</td>\n","      <td>98.0</td>\n","      <td>76</td>\n","      <td>low risk</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64873299-acb8-46dc-acbc-8ee59b17addc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-64873299-acb8-46dc-acbc-8ee59b17addc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-64873299-acb8-46dc-acbc-8ee59b17addc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   Age  SystolicBP  DiastolicBP    BS  BodyTemp  HeartRate  RiskLevel\n","0   25         130           80  15.0      98.0         86  high risk\n","1   35         140           90  13.0      98.0         70  high risk\n","2   29          90           70   8.0     100.0         80  high risk\n","3   30         140           85   7.0      98.0         70  high risk\n","4   35         120           60   6.1      98.0         76   low risk"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["# printing the first 5 rows of the dataset\n","dataset.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1654838704561,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"ylu3Ii79TGdv","outputId":"64486022-753d-424c-dedb-e918b0f15a58"},"outputs":[{"data":{"text/plain":["Age            0\n","SystolicBP     0\n","DiastolicBP    0\n","BS             0\n","BodyTemp       0\n","HeartRate      0\n","RiskLevel      0\n","dtype: int64"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["#check Missing values\n","dataset.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1654838707384,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"lynParo6pEMB","outputId":"c3bfdabb-eb3a-4265-a905-2437c712723b"},"outputs":[{"data":{"text/plain":["(1014, 7)"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["# number of rows and Columns in this dataset\n","dataset.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1654838708345,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"3NDJOlrEpmoL","outputId":"4e160386-c363-47ff-fce9-d5b7685c9763"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-69eeddbd-828a-499a-80fe-e085f4a167b4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","      <td>1014.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>29.871795</td>\n","      <td>113.198225</td>\n","      <td>76.460552</td>\n","      <td>8.725986</td>\n","      <td>98.665089</td>\n","      <td>74.301775</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>13.474386</td>\n","      <td>18.403913</td>\n","      <td>13.885796</td>\n","      <td>3.293532</td>\n","      <td>1.371384</td>\n","      <td>8.088702</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>10.000000</td>\n","      <td>70.000000</td>\n","      <td>49.000000</td>\n","      <td>6.000000</td>\n","      <td>98.000000</td>\n","      <td>7.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>19.000000</td>\n","      <td>100.000000</td>\n","      <td>65.000000</td>\n","      <td>6.900000</td>\n","      <td>98.000000</td>\n","      <td>70.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>26.000000</td>\n","      <td>120.000000</td>\n","      <td>80.000000</td>\n","      <td>7.500000</td>\n","      <td>98.000000</td>\n","      <td>76.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>39.000000</td>\n","      <td>120.000000</td>\n","      <td>90.000000</td>\n","      <td>8.000000</td>\n","      <td>98.000000</td>\n","      <td>80.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>70.000000</td>\n","      <td>160.000000</td>\n","      <td>100.000000</td>\n","      <td>19.000000</td>\n","      <td>103.000000</td>\n","      <td>90.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69eeddbd-828a-499a-80fe-e085f4a167b4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-69eeddbd-828a-499a-80fe-e085f4a167b4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-69eeddbd-828a-499a-80fe-e085f4a167b4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["               Age   SystolicBP  DiastolicBP           BS     BodyTemp  \\\n","count  1014.000000  1014.000000  1014.000000  1014.000000  1014.000000   \n","mean     29.871795   113.198225    76.460552     8.725986    98.665089   \n","std      13.474386    18.403913    13.885796     3.293532     1.371384   \n","min      10.000000    70.000000    49.000000     6.000000    98.000000   \n","25%      19.000000   100.000000    65.000000     6.900000    98.000000   \n","50%      26.000000   120.000000    80.000000     7.500000    98.000000   \n","75%      39.000000   120.000000    90.000000     8.000000    98.000000   \n","max      70.000000   160.000000   100.000000    19.000000   103.000000   \n","\n","         HeartRate  \n","count  1014.000000  \n","mean     74.301775  \n","std       8.088702  \n","min       7.000000  \n","25%      70.000000  \n","50%      76.000000  \n","75%      80.000000  \n","max      90.000000  "]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["# getting the statistical measures of the data\n","dataset.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1654838710480,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"LrpHzaGpp5dQ","outputId":"72b2bb6f-e61d-4aa2-dcfc-60b9d224eebc"},"outputs":[{"data":{"text/plain":["low risk     406\n","mid risk     336\n","high risk    272\n","Name: RiskLevel, dtype: int64"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["dataset['RiskLevel'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"elapsed":424,"status":"ok","timestamp":1654858153290,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"I6MWR0k_qSCK","outputId":"93d71381-b727-4a0f-fe40-e0f0b34b7969"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-cf517367-ebee-4b1c-8c4a-daa67da35a66\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","    </tr>\n","    <tr>\n","      <th>RiskLevel</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>high risk</th>\n","      <td>36.216912</td>\n","      <td>124.194853</td>\n","      <td>85.073529</td>\n","      <td>12.122610</td>\n","      <td>98.899265</td>\n","      <td>76.742647</td>\n","    </tr>\n","    <tr>\n","      <th>low risk</th>\n","      <td>26.869458</td>\n","      <td>105.866995</td>\n","      <td>72.534483</td>\n","      <td>7.220271</td>\n","      <td>98.368966</td>\n","      <td>72.770936</td>\n","    </tr>\n","    <tr>\n","      <th>mid risk</th>\n","      <td>28.363095</td>\n","      <td>113.154762</td>\n","      <td>74.232143</td>\n","      <td>7.795744</td>\n","      <td>98.833333</td>\n","      <td>74.175595</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf517367-ebee-4b1c-8c4a-daa67da35a66')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cf517367-ebee-4b1c-8c4a-daa67da35a66 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cf517367-ebee-4b1c-8c4a-daa67da35a66');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                 Age  SystolicBP  DiastolicBP         BS   BodyTemp  HeartRate\n","RiskLevel                                                                     \n","high risk  36.216912  124.194853    85.073529  12.122610  98.899265  76.742647\n","low risk   26.869458  105.866995    72.534483   7.220271  98.368966  72.770936\n","mid risk   28.363095  113.154762    74.232143   7.795744  98.833333  74.175595"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["dataset.groupby('RiskLevel').mean()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k6H3x1B8Yrzd"},"outputs":[],"source":["correlation = dataset.corr()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":595},"executionInfo":{"elapsed":752,"status":"ok","timestamp":1654838715843,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"SRci1RLuYvFW","outputId":"9332f1c4-a1e7-4619-ae9a-6d3d97a605bd"},"outputs":[{"data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f5076e1a210>"]},"execution_count":11,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"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2cAoCw3kX2HjE3wt7ZPNzQfWW2joe16W4TcDB8csz/8ALwLPEdotZdwFXGChAfIgtr6c88Jy+NlKDxDuJBD//nmzdQkXOn8iHHNTZ/M71U8fmFlVbHfSm3DVdEArJ5+iFVO2c9y9WNpbiHRaudhfzazW3YvqfT+S3qradTk7mfep6truek08/95DaAS+AjjW3T+w8J6z0939v8zsJEK2ckFi0rHx1mHL8+5kFZoZhAZh3YCr3H1iXgPqIGb2EuFq7Gte3I/DipS8XO2vqtCUtvfrcleh6V3Z/gpNR+pUFRoREZFSpApNabahERERkU6m5B7bFhER6WxMP0+pDI2IiIgUP2VoREREitzW/mhkKVCGRkRERIqeKjQiIiJS9FShERERkaKnNjQiIiJFTm1olKERERGREqAMjYiISJHTe2iUoREREZESoAyNiIhIkVMbGmVoREREpAQoQyMiIlLklKBRhkZERERKgDI0IiIixU4pGmVoREREpPipQiMiIiJFT7ecREREipxerKcMjYiIiJQAZWhERESKnF6spwyNiIiIlABlaERERIqcEjTK0IiIiEgJUIZGRESk2ClFowyNiIiIFD9laERERIqc3kOjDI2IiIiUAGVoREREipzeQ6MMjYiIiJQAc/d8xyAiIiKyVZShERERkaKnCo2IiIgUPVVoREREpOipQiMiIiJFTxUaERERKXqq0IiIiEjR+39My+Imh5jtAAAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# constructing a heatmap to nderstand the correlation\n","plt.figure(figsize=(10,10))\n","sns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a6I_WTWw5JEA"},"outputs":[],"source":["\n","from sklearn.preprocessing import LabelEncoder\n","label_encoder = LabelEncoder()\n","dataset['RiskLevel']= label_encoder.fit_transform(dataset['RiskLevel'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1654858158451,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"fpskM0wz5TQ7","outputId":"69f2fb19-5049-4d28-f159-ea0fcf4f5323"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-0771c5a5-fe42-4eb3-bad3-ac80478b3ec8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>SystolicBP</th>\n","      <th>DiastolicBP</th>\n","      <th>BS</th>\n","      <th>BodyTemp</th>\n","      <th>HeartRate</th>\n","      <th>RiskLevel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>130</td>\n","      <td>80</td>\n","      <td>15.0</td>\n","      <td>98.0</td>\n","      <td>86</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>35</td>\n","      <td>140</td>\n","      <td>90</td>\n","      <td>13.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>8.0</td>\n","      <td>100.0</td>\n","      <td>80</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30</td>\n","      <td>140</td>\n","      <td>85</td>\n","      <td>7.0</td>\n","      <td>98.0</td>\n","      <td>70</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35</td>\n","      <td>120</td>\n","      <td>60</td>\n","      <td>6.1</td>\n","      <td>98.0</td>\n","      <td>76</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0771c5a5-fe42-4eb3-bad3-ac80478b3ec8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0771c5a5-fe42-4eb3-bad3-ac80478b3ec8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0771c5a5-fe42-4eb3-bad3-ac80478b3ec8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   Age  SystolicBP  DiastolicBP    BS  BodyTemp  HeartRate  RiskLevel\n","0   25         130           80  15.0      98.0         86          0\n","1   35         140           90  13.0      98.0         70          0\n","2   29          90           70   8.0     100.0         80          0\n","3   30         140           85   7.0      98.0         70          0\n","4   35         120           60   6.1      98.0         76          1"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["dataset.head()"]},{"cell_type":"markdown","metadata":{"id":"cFy40GI-6BKb"},"source":["\n","*   0 -> High Risk\n","*   1 -> Low Risk\n","*   2 -> Mid risk "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":640,"status":"ok","timestamp":1654838723522,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"XkV8GuAq5k-v","outputId":"37c0057b-4c04-46a6-88d8-88c9adae7ac2"},"outputs":[{"data":{"text/plain":["array([0, 1, 2])"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["dataset.RiskLevel.unique()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RoDW7l9mqqHZ"},"outputs":[],"source":["# separating the data and labels\n","X = dataset.drop(columns = 'RiskLevel', axis=1)\n","Y = dataset['RiskLevel']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":387,"status":"ok","timestamp":1654838728287,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"3eiRW9M9raMm","outputId":"323eccb5-d515-46ae-8948-33b50e3440fd"},"outputs":[{"name":"stdout","output_type":"stream","text":["      Age  SystolicBP  DiastolicBP    BS  BodyTemp  HeartRate\n","0      25         130           80  15.0      98.0         86\n","1      35         140           90  13.0      98.0         70\n","2      29          90           70   8.0     100.0         80\n","3      30         140           85   7.0      98.0         70\n","4      35         120           60   6.1      98.0         76\n","...   ...         ...          ...   ...       ...        ...\n","1009   22         120           60  15.0      98.0         80\n","1010   55         120           90  18.0      98.0         60\n","1011   35          85           60  19.0      98.0         86\n","1012   43         120           90  18.0      98.0         70\n","1013   32         120           65   6.0     101.0         76\n","\n","[1014 rows x 6 columns]\n"]}],"source":["print(X)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":617,"status":"ok","timestamp":1654838729941,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"AoxgTJAMrcCl","outputId":"9c8d9212-7dce-4637-a4f2-3bbfacd0f738"},"outputs":[{"name":"stdout","output_type":"stream","text":["0       0\n","1       0\n","2       0\n","3       0\n","4       1\n","       ..\n","1009    0\n","1010    0\n","1011    0\n","1012    0\n","1013    2\n","Name: RiskLevel, Length: 1014, dtype: int64\n"]}],"source":["print(Y)"]},{"cell_type":"markdown","metadata":{"id":"umAbo_kqrlzI"},"source":["Data Standardization"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"njfM5X60rgnc"},"outputs":[],"source":["scaler = StandardScaler()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"g0ai5ARbr53p"},"outputs":[],"source":["# scaler.fit(X)\n","\n","# Standardize the training dataset\n","X = pd.DataFrame(scaler.fit_transform(X),index=X.index, columns=X.columns)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fjMwZ5x6sPUJ"},"outputs":[],"source":["# standardized_data = scaler.transform(X)\n","# print(standardized_data)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZxWSl4SGsRjE"},"outputs":[],"source":["#X = standardized_data\n","Y = dataset['RiskLevel']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":480,"status":"ok","timestamp":1654878776440,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"lhJF_7QjsjmP","outputId":"9fda99d9-f031-4ea9-d152-afd9c1febf9e"},"outputs":[{"output_type":"stream","name":"stdout","text":["           Age  SystolicBP  DiastolicBP        BS  BodyTemp  HeartRate\n","0    -0.361738    0.913396     0.255023  1.905890 -0.485215   1.446956\n","1     0.380777    1.457027     0.975539  1.298340 -0.485215  -0.532088\n","2    -0.064732   -1.261127    -0.465493 -0.220537  0.973884   0.704815\n","3     0.009519    1.457027     0.615281 -0.524312 -0.485215  -0.532088\n","4     0.380777    0.369765    -1.186009 -0.797710 -0.485215   0.210054\n","...        ...         ...          ...       ...       ...        ...\n","1009 -0.584493    0.369765    -1.186009  1.905890 -0.485215   0.704815\n","1010  1.865807    0.369765     0.975539  2.817216 -0.485215  -1.768990\n","1011  0.380777   -1.532942    -1.186009  3.120991 -0.485215   1.446956\n","1012  0.974789    0.369765     0.975539  2.817216 -0.485215  -0.532088\n","1013  0.158022    0.369765    -0.825751 -0.828087  1.703434   0.210054\n","\n","[1014 rows x 6 columns]\n","0       0\n","1       0\n","2       0\n","3       0\n","4       1\n","       ..\n","1009    0\n","1010    0\n","1011    0\n","1012    0\n","1013    2\n","Name: RiskLevel, Length: 1014, dtype: int64\n"]}],"source":["print(X)\n","print(Y)"]},{"cell_type":"markdown","metadata":{"id":"gHciEFkxsoQP"},"source":["Train Test Split"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AEfKGj_yslvD"},"outputs":[],"source":["X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":386,"status":"ok","timestamp":1654885031821,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"DR05T-o0t3FQ","outputId":"cff086f9-24a8-4a76-8e90-c98bf5c1ec33"},"outputs":[{"output_type":"stream","name":"stdout","text":["(1014, 6) (811, 6) (203, 6)\n"]}],"source":["print(X.shape, X_train.shape, X_test.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1654850370502,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"ZRHrj7gHAJuY","outputId":"614e722e-8c87-44ea-aa31-2d4157c7bfb3"},"outputs":[{"data":{"text/plain":["270     1\n","388     1\n","305     1\n","468     0\n","816     2\n","       ..\n","359     2\n","1004    0\n","912     1\n","397     0\n","697     1\n","Name: RiskLevel, Length: 203, dtype: int64"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["Y_test"]},{"cell_type":"markdown","metadata":{"id":"ElJ3tkOtuC_n"},"source":["Training the Model"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":385,"status":"ok","timestamp":1654885036645,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"trTMAwoFZYxM","outputId":"dbb9abf9-3087-474b-ea15-31efffa7ea5d"},"outputs":[{"output_type":"stream","name":"stdout","text":["The list of values for C are [ 0.1  1.  10. ]\n","The list of values for gamma are [ 0.1  1.  10. ]\n"]}],"source":["# List of C values\n","C_range = np.logspace(-1, 1, 3)\n","print(f'The list of values for C are {C_range}')\n","# List of gamma values\n","gamma_range = np.logspace(-1, 1, 3)\n","print(f'The list of values for gamma are {gamma_range}')\n","#The list of values for C are [ 0.1  1.  10. ]\n","#The list of values for gamma are [ 0.1  1.  10. ]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EyVNVVhHZihL"},"outputs":[],"source":["# Define the search space\n","param_grid = { \n","    # Regularization parameter.\n","    \"C\": C_range,\n","    # Kernel type\n","    \"kernel\": ['rbf', 'poly'],\n","    # Gamma is the Kernel coefficient for ‘rbf’, ‘poly’ and ‘sigmoid’.\n","    \"gamma\": gamma_range.tolist()+['scale', 'auto']\n","    }\n","# Set up score\n","scoring = ['accuracy']\n","# Set up the k-fold cross-validation\n","kfold = StratifiedKFold(n_splits=3, shuffle=True, random_state=0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f41Ew4MAxwBx"},"outputs":[],"source":["# svmc = svm.SVC(kernel='linear',probability=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"48-5ublZaDnJ","executionInfo":{"status":"ok","timestamp":1654891129147,"user_tz":-360,"elapsed":6086259,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"9a646425-149f-4d17-a807-fc2aa0c4043e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=StratifiedKFold(n_splits=3, random_state=0, shuffle=True),\n","             estimator=SVC(probability=True), n_jobs=-1,\n","             param_grid={'C': array([ 0.1,  1. , 10. ]),\n","                         'gamma': [0.1, 1.0, 10.0, 'scale', 'auto'],\n","                         'kernel': ['rbf', 'poly']},\n","             refit='accuracy', scoring=['accuracy'])"]},"metadata":{},"execution_count":13}],"source":["# Define grid search\n","grid_search = GridSearchCV(estimator=svm.SVC(probability=True), \n","                           param_grid=param_grid, \n","                           scoring=scoring, \n","                           refit='accuracy', \n","                           n_jobs=-1, \n","                           cv=kfold, \n","                           verbose=0)\n","# Fit grid search\n","model = grid_search.fit(X_train, Y_train)\n","# Print grid search summary\n","model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8-xEkKVwBs56"},"outputs":[],"source":["# params = [{'max_features': list(range(0,14)), 'solver': ['newton-cg','lbfgs','liblinear'], 'penalty': ['none','l1', 'l2', 'elasticnet']}]\n","\n","# cv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5szLWHlNt9xc"},"outputs":[],"source":["# svmc = svm.SVC(kernel='linear',probability=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Agu7TwYRCIe6"},"outputs":[],"source":["# classifier = GridSearchCV(svmc, params, cv = cv, scoring='accuracy')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ncJWY_7suPAb"},"outputs":[],"source":["#training the support vector Machine Classifier\n","# model = classifier.fit(X_train, Y_train)"]},{"cell_type":"markdown","metadata":{"id":"UV4-CAfquiyP"},"source":["Model Evaluation"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hSlsuFfaD7Az","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654892020537,"user_tz":-360,"elapsed":347,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"}},"outputId":"94243861-6203-40b9-db36-d240a66a5545"},"outputs":[{"output_type":"stream","name":"stdout","text":["Best Score: 0.7373468179126236\n","Best Hyperparameters: {'C': 10.0, 'gamma': 10.0, 'kernel': 'rbf'}\n"]}],"source":["# summarize result\n","print('Best Score: %s' % model.best_score_)\n","print('Best Hyperparameters: %s' % model.best_params_)"]},{"cell_type":"markdown","metadata":{"id":"yhAjGPJWunXa"},"source":["Accuracy Score"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fJLEPQK7ueXp"},"outputs":[],"source":["# accuracy score on the training data\n","X_train_prediction = model.predict(X_train)\n","training_data_accuracy = accuracy_score(X_train_prediction, Y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":357,"status":"ok","timestamp":1654892359834,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"mmJ22qhVvNwj","outputId":"a0e34f43-063b-4809-bb32-7f52989e78be"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the training data :  0.9013563501849569\n"]}],"source":["print('Accuracy score of the training data : ', training_data_accuracy)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"G2CICFMEvcCl"},"outputs":[],"source":["# accuracy score on the test data\n","X_test_prediction = model.predict(X_test)\n","test_data_accuracy = accuracy_score(X_test_prediction, Y_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":343,"status":"ok","timestamp":1654892372319,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"i2GcW_t_vz7C","outputId":"bd5a316b-3ba2-45de-94b8-de30173333c8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the test data :  0.7783251231527094\n"]}],"source":["print('Accuracy score of the test data : ', test_data_accuracy)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vhzXo6SkcWpP"},"outputs":[],"source":["y_pred = model.predict(X_test)\n","y_pred_proba = model.predict_proba(X_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":479,"status":"ok","timestamp":1654892382520,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"NSCYWeEqBdQJ","outputId":"1294dee0-b030-45cd-e482-b6e9a19990b9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 1, 0, 2, 2, 0, 1, 1, 2, 2, 0, 1, 1, 2, 0, 2, 0, 0, 2, 1, 1,\n","       2, 1, 2, 0, 0, 1, 0, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0, 1,\n","       1, 1, 2, 0, 0, 0, 2, 2, 1, 2, 2, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1,\n","       1, 2, 1, 2, 0, 2, 2, 0, 1, 1, 1, 1, 1, 0, 2, 1, 2, 0, 1, 1, 2, 1,\n","       2, 0, 1, 2, 0, 1, 1, 2, 1, 0, 1, 2, 2, 1, 1, 1, 0, 0, 1, 2, 1, 1,\n","       0, 0, 2, 0, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 1, 1, 2, 1, 1,\n","       1, 2, 2, 2, 2, 0, 2, 1, 2, 0, 1, 2, 1, 2, 0, 1, 1, 0, 0, 1, 2, 0,\n","       1, 0, 1, 2, 0, 1, 1, 2, 2, 2, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0,\n","       0, 2, 2, 1, 2, 1, 0, 2, 0, 2, 2, 2, 1, 0, 0, 2, 1, 2, 2, 2, 2, 2,\n","       1, 2, 0, 0, 2])"]},"metadata":{},"execution_count":23}],"source":["y_pred"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":360,"status":"ok","timestamp":1654892393542,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"8dfi1wgVD1x9","outputId":"c1595dad-6812-48e0-88ba-f89a921d16a6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.03428334, 0.84961571, 0.11610096],\n","       [0.21250622, 0.36632208, 0.42117171],\n","       [0.06911435, 0.79186794, 0.1390177 ],\n","       [0.88466921, 0.05305496, 0.06227583],\n","       [0.06255102, 0.03028229, 0.90716668],\n","       [0.03949298, 0.20099455, 0.75951246],\n","       [0.88466969, 0.05305961, 0.0622707 ],\n","       [0.02698281, 0.82132987, 0.15168733],\n","       [0.30487416, 0.41684529, 0.27828054],\n","       [0.07388894, 0.17691174, 0.74919932],\n","       [0.16794607, 0.3745799 , 0.45747403],\n","       [0.88466848, 0.05308085, 0.06225066],\n","       [0.08578843, 0.69501349, 0.21919808],\n","       [0.30487416, 0.41684529, 0.27828055],\n","       [0.0759545 , 0.17439735, 0.74964814],\n","       [0.88464356, 0.05306351, 0.06229293],\n","       [0.07388894, 0.17691174, 0.74919932],\n","       [0.88469662, 0.05310311, 0.06220026],\n","       [0.88769121, 0.03497465, 0.07733415],\n","       [0.07384824, 0.17730603, 0.74884573],\n","       [0.04312557, 0.80996398, 0.14691045],\n","       [0.05028956, 0.83906783, 0.11064261],\n","       [0.0303663 , 0.43037254, 0.53926116],\n","       [0.02994941, 0.94734197, 0.02270862],\n","       [0.0759545 , 0.17439735, 0.74964814],\n","       [0.88279038, 0.05210262, 0.065107  ],\n","       [0.89699252, 0.05329091, 0.04971658],\n","       [0.0279407 , 0.57087287, 0.40118643],\n","       [0.88470916, 0.05305245, 0.06223839],\n","       [0.85934315, 0.03687957, 0.10377728],\n","       [0.03175786, 0.40676039, 0.56148175],\n","       [0.02257435, 0.82515189, 0.15227375],\n","       [0.02951211, 0.41554545, 0.55494243],\n","       [0.30487416, 0.41684529, 0.27828055],\n","       [0.02959511, 0.16932952, 0.80107536],\n","       [0.39762826, 0.50501386, 0.09735788],\n","       [0.0752014 , 0.17545671, 0.74934188],\n","       [0.06368891, 0.80979392, 0.12651717],\n","       [0.07325642, 0.17805528, 0.7486883 ],\n","       [0.02867196, 0.74743217, 0.22389587],\n","       [0.02609185, 0.20340365, 0.7705045 ],\n","       [0.03050514, 0.77894673, 0.19054812],\n","       [0.88472564, 0.05302656, 0.0622478 ],\n","       [0.06368777, 0.80979018, 0.12652205],\n","       [0.34801292, 0.44759488, 0.2043922 ],\n","       [0.06238186, 0.80864662, 0.12897151],\n","       [0.03306682, 0.20210488, 0.7648283 ],\n","       [0.88769121, 0.03497465, 0.07733415],\n","       [0.88769121, 0.03497465, 0.07733415],\n","       [0.88473428, 0.05306156, 0.06220416],\n","       [0.03166297, 0.20191427, 0.76642276],\n","       [0.20737306, 0.09024003, 0.7023869 ],\n","       [0.03527897, 0.86463338, 0.10008766],\n","       [0.03166155, 0.2019515 , 0.76638695],\n","       [0.02569553, 0.46790695, 0.50639752],\n","       [0.88470393, 0.05307125, 0.06222482],\n","       [0.06248704, 0.83239043, 0.10512252],\n","       [0.04250538, 0.87833051, 0.0791641 ],\n","       [0.02976253, 0.38024595, 0.58999152],\n","       [0.03165895, 0.20208191, 0.76625914],\n","       [0.06019256, 0.81277386, 0.12703359],\n","       [0.06090005, 0.81746256, 0.12163739],\n","       [0.88467279, 0.05308497, 0.06224223],\n","       [0.02722015, 0.77066579, 0.20211406],\n","       [0.88470393, 0.05307125, 0.06222482],\n","       [0.02049919, 0.82752367, 0.15197714],\n","       [0.02706282, 0.8105159 , 0.16242128],\n","       [0.07522614, 0.17534427, 0.74942959],\n","       [0.06248704, 0.83239043, 0.10512252],\n","       [0.03166297, 0.20191427, 0.76642276],\n","       [0.51202866, 0.17364447, 0.31432686],\n","       [0.08019634, 0.10200843, 0.81779523],\n","       [0.03166297, 0.20191427, 0.76642276],\n","       [0.88467279, 0.05308497, 0.06224223],\n","       [0.07954901, 0.77604684, 0.14440416],\n","       [0.12522611, 0.67994173, 0.19483215],\n","       [0.06364856, 0.80982236, 0.12652908],\n","       [0.02977863, 0.81138617, 0.1588352 ],\n","       [0.05594138, 0.52312283, 0.42093579],\n","       [0.88472978, 0.05303934, 0.06223089],\n","       [0.03404439, 0.20231595, 0.76363966],\n","       [0.04115148, 0.92978194, 0.02906658],\n","       [0.0315235 , 0.20202991, 0.76644659],\n","       [0.91672396, 0.03674137, 0.04653467],\n","       [0.09848647, 0.73984688, 0.16166665],\n","       [0.02257435, 0.82515189, 0.15227375],\n","       [0.0759545 , 0.17439735, 0.74964814],\n","       [0.28738797, 0.40518699, 0.30742504],\n","       [0.03128429, 0.20180979, 0.76690592],\n","       [0.88466921, 0.05305496, 0.06227583],\n","       [0.02235087, 0.82583918, 0.15180995],\n","       [0.03167752, 0.20198416, 0.76633831],\n","       [0.88467943, 0.05302946, 0.06229111],\n","       [0.03314488, 0.81610671, 0.15074841],\n","       [0.02722015, 0.77066579, 0.20211406],\n","       [0.08695898, 0.1344824 , 0.77855862],\n","       [0.06745566, 0.80232962, 0.13021472],\n","       [0.88466969, 0.05305961, 0.0622707 ],\n","       [0.04115148, 0.92978194, 0.02906658],\n","       [0.03166155, 0.2019515 , 0.76638695],\n","       [0.02162654, 0.16571498, 0.81265848],\n","       [0.09848647, 0.73984688, 0.16166665],\n","       [0.0254302 , 0.78282353, 0.19174627],\n","       [0.28738797, 0.40518699, 0.30742504],\n","       [0.88550921, 0.03769541, 0.07679538],\n","       [0.88769121, 0.03497465, 0.07733415],\n","       [0.08578843, 0.69501349, 0.21919808],\n","       [0.04368934, 0.19957028, 0.75674038],\n","       [0.26403511, 0.46261134, 0.27335355],\n","       [0.06368891, 0.80979392, 0.12651717],\n","       [0.88452725, 0.05296062, 0.06251213],\n","       [0.85198548, 0.0741757 , 0.07383882],\n","       [0.03998546, 0.27311568, 0.68689886],\n","       [0.85198548, 0.0741757 , 0.07383882],\n","       [0.08019634, 0.10200843, 0.81779523],\n","       [0.02926921, 0.08599711, 0.88473368],\n","       [0.06001295, 0.81735827, 0.12262879],\n","       [0.06392743, 0.81010538, 0.12596719],\n","       [0.0272233 , 0.77138562, 0.20139108],\n","       [0.03166155, 0.2019515 , 0.76638695],\n","       [0.02235087, 0.82583918, 0.15180995],\n","       [0.05855656, 0.82076369, 0.12067974],\n","       [0.03705163, 0.81362127, 0.14932709],\n","       [0.07498782, 0.175769  , 0.74924318],\n","       [0.88470393, 0.05307125, 0.06222482],\n","       [0.88476694, 0.05305927, 0.06217379],\n","       [0.88279038, 0.05210262, 0.065107  ],\n","       [0.26403511, 0.46261134, 0.27335355],\n","       [0.02683454, 0.82026168, 0.15290378],\n","       [0.07513454, 0.17547624, 0.74938922],\n","       [0.02856515, 0.54133384, 0.43010101],\n","       [0.13209431, 0.6806496 , 0.18725608],\n","       [0.05710567, 0.81977301, 0.12312132],\n","       [0.07523447, 0.17542836, 0.74933717],\n","       [0.08019634, 0.10200843, 0.81779523],\n","       [0.03166155, 0.2019515 , 0.76638695],\n","       [0.04368934, 0.19957028, 0.75674038],\n","       [0.88467943, 0.05302946, 0.06229111],\n","       [0.08019634, 0.10200843, 0.81779523],\n","       [0.04250538, 0.87833051, 0.0791641 ],\n","       [0.08022312, 0.10201463, 0.81776225],\n","       [0.8846845 , 0.05307097, 0.06224453],\n","       [0.0643211 , 0.81071773, 0.12496118],\n","       [0.03166155, 0.2019515 , 0.76638695],\n","       [0.0218113 , 0.82637853, 0.15181018],\n","       [0.03166297, 0.20191427, 0.76642276],\n","       [0.88467803, 0.0530533 , 0.06226867],\n","       [0.08062048, 0.68062526, 0.23875425],\n","       [0.30487412, 0.41684531, 0.27828057],\n","       [0.88473136, 0.05304497, 0.06222367],\n","       [0.88472325, 0.05305455, 0.06222221],\n","       [0.06295105, 0.79814568, 0.13890327],\n","       [0.03306682, 0.20210488, 0.7648283 ],\n","       [0.88469441, 0.05306634, 0.06223925],\n","       [0.0674277 , 0.80172469, 0.13084761],\n","       [0.88470393, 0.05307125, 0.06222482],\n","       [0.06338609, 0.80961957, 0.12699434],\n","       [0.07528332, 0.17541109, 0.74930559],\n","       [0.54491975, 0.23849898, 0.21658127],\n","       [0.11552801, 0.62951123, 0.25496076],\n","       [0.34801292, 0.44759488, 0.2043922 ],\n","       [0.03412139, 0.45566772, 0.51021089],\n","       [0.08199432, 0.16264085, 0.75536483],\n","       [0.03166155, 0.2019515 , 0.76638695],\n","       [0.88473187, 0.05303889, 0.06222924],\n","       [0.07526104, 0.17549981, 0.74923915],\n","       [0.05822777, 0.80670071, 0.13507152],\n","       [0.0317666 , 0.82340831, 0.14482509],\n","       [0.0272233 , 0.77138562, 0.20139108],\n","       [0.08695898, 0.1344824 , 0.77855862],\n","       [0.06221627, 0.8084103 , 0.12937343],\n","       [0.88464356, 0.05306351, 0.06229293],\n","       [0.02461842, 0.82374634, 0.15163524],\n","       [0.07522614, 0.17534427, 0.74942959],\n","       [0.30547175, 0.41582258, 0.27870567],\n","       [0.88472904, 0.05304989, 0.06222106],\n","       [0.88449557, 0.05299631, 0.06250812],\n","       [0.03166297, 0.20191427, 0.76642276],\n","       [0.04368934, 0.19957028, 0.75674038],\n","       [0.06661962, 0.81586579, 0.11751459],\n","       [0.07423791, 0.17680439, 0.7489577 ],\n","       [0.30482677, 0.41691487, 0.27825836],\n","       [0.90704114, 0.04159029, 0.05136858],\n","       [0.04489215, 0.19925906, 0.75584879],\n","       [0.88769121, 0.03497465, 0.07733415],\n","       [0.05244631, 0.19572786, 0.75182583],\n","       [0.07523958, 0.1753824 , 0.74937802],\n","       [0.0752399 , 0.17546684, 0.74929326],\n","       [0.30490776, 0.41682206, 0.27827018],\n","       [0.88466848, 0.05308085, 0.06225066],\n","       [0.88461859, 0.05309113, 0.06229029],\n","       [0.03412139, 0.45566772, 0.51021089],\n","       [0.302191  , 0.42058988, 0.27721912],\n","       [0.07526104, 0.17549981, 0.74923915],\n","       [0.07519762, 0.17538027, 0.74942211],\n","       [0.07648078, 0.1734093 , 0.75010992],\n","       [0.03166155, 0.2019515 , 0.76638695],\n","       [0.07138996, 0.17115813, 0.75745192],\n","       [0.02706282, 0.8105159 , 0.16242128],\n","       [0.02926921, 0.08599711, 0.88473368],\n","       [0.51202866, 0.17364447, 0.31432686],\n","       [0.88769121, 0.03497465, 0.07733415],\n","       [0.03166155, 0.2019515 , 0.76638695]])"]},"metadata":{},"execution_count":25}],"source":["y_pred_proba"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":351,"status":"ok","timestamp":1654892399964,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"CgnKCFcF91EW","outputId":"1f5310ad-8091-4a6b-b4ff-d711b3f13105"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[44,  6,  5],\n","       [ 5, 61, 15],\n","       [ 1, 13, 53]])"]},"metadata":{},"execution_count":26}],"source":["# Constructing the confusion matrix.\n","from sklearn.metrics import confusion_matrix\n","confusion_matrix(Y_test, y_pred)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":347,"status":"ok","timestamp":1654892402676,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"NqGqhdlVcyVE","outputId":"2c1d111d-a6f8-49f8-8ed5-e3c01444b6a7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Precision Score :  0.7783251231527094\n"]}],"source":["print(\"Precision Score : \",precision_score(Y_test, y_pred, average='micro'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":405,"status":"ok","timestamp":1654892405970,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"4jrpix-ycSUW","outputId":"1a96ca88-542a-4c9c-e67f-58849fad6e37"},"outputs":[{"output_type":"stream","name":"stdout","text":["Recall Score :  0.7783251231527094\n"]}],"source":["print(\"Recall Score : \",recall_score(Y_test, y_pred, average='micro'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":377,"status":"ok","timestamp":1654892407853,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"LNIZ-MVfbgH9","outputId":"8698c84e-8f1d-4a7e-bc65-3fa94c895201"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy Score :  0.7783251231527094\n"]}],"source":["print(\"Accuracy Score : \",accuracy_score(Y_test, y_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1654892410051,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"ntGmozN8d_o7","outputId":"27a2d098-0d1b-48bf-ec6a-6b89a866af8a"},"outputs":[{"output_type":"stream","name":"stdout","text":["F1 Score :  0.7783251231527094\n"]}],"source":["print(\"F1 Score : \",f1_score(Y_test, y_pred, average='micro'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":682,"status":"ok","timestamp":1654892413735,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"pym6h3XOeHUD","outputId":"bb26299e-a0d7-41a8-ab57-51d4f21085b3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Log Loss :  0.5947181674643794\n"]}],"source":["print(\"Log Loss : \",log_loss(Y_test, y_pred_proba))"]},{"cell_type":"markdown","metadata":{"id":"gq8ZX1xpwPF5"},"source":["Making a Predictive System"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":338,"status":"ok","timestamp":1654892420325,"user":{"displayName":"saidul nayan","userId":"01547292048590570309"},"user_tz":-360},"id":"U-ULRe4yv5tH","outputId":"65d0d163-08ee-4a20-b18f-9d34460a3198"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.90053753  0.91339632  0.25502279  2.81721597 -0.4852155  -0.53208757]]\n","[2]\n","Mid Risk\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names\n","  \"X does not have valid feature names, but\"\n","/usr/local/lib/python3.7/dist-packages/sklearn/base.py:451: UserWarning: X does not have valid feature names, but SVC was fitted with feature names\n","  \"X does not have valid feature names, but\"\n"]}],"source":["input_data = (42,130,80,18,98,70)\n","\n","# changing the input_data to numpy array\n","input_data_as_numpy_array = np.asarray(input_data)\n","\n","# reshape the array as we are predicting for one instance\n","input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)\n","\n","# standardize the input data\n","std_data = scaler.transform(input_data_reshaped)\n","print(std_data)\n","\n","prediction = model.predict(std_data)\n","print(prediction)\n","\n","if (prediction[0] == 0):\n","  print('High Risk')\n","elif (prediction[0] == 1):\n","  print('Low Risk')\n","else:\n","  print('Mid Risk')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ex2A_pr4yCpm"},"outputs":[],"source":[""]}],"metadata":{"colab":{"collapsed_sections":[],"name":"Maternal Health Risk Data (SVM)","provenance":[{"file_id":"1oxnhMTlomJ4HVhPuowpPFyMt1mwuOuQo","timestamp":1654522599080}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"accelerator":"TPU"},"nbformat":4,"nbformat_minor":0}